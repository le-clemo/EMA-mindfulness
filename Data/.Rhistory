plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")), main = "")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")))
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")), main = "")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")), main = "")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")), main = "")
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F)
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam")
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "")
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination")
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "")
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination", ylim = c(-6,6)
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination", ylim = c(-6,6))
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "", ylim = c(-6,6))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination", ylim = c(-6,6))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "", ylim = c(-6,6))
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination", ylim = c(-4,4))
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "", ylim = c(-4,4))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination", ylim = c(-4,4))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "", ylim = c(-4,4))
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "phaseBeepNum", legend = F, ylab = "Rumination", ylim = c(-1.5,1.5))
plot_smooth(rum.peri, plot_all = c("group"), view = "stickiness_gam", legend = FALSE, ylab = "", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumNA_gam", legend = FALSE, ylab = "Rumination", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("group"), view = "sumPA_gam", ylab = "", ylim = c(-3,3))
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumNA_gam",
ylab = "Rumination", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumPA_gam",
ylab = "")
View(sc_data)
#refitting the baseline model for peri phase (with change scores)
rum.peri.test <- gam(ruminating_gam ~ group * intervention + s(phaseBeepNum, by = interaction(group, intervention)) +
s(sumNA_gam, by = interaction(group, intervention)) + s(sumPA_gam, by = interaction(group, intervention)) +
s(negMax_gam) + s(posMax_gam) +
s(stickiness_gam, by = interaction(group, intervention)) +
s(distracted_gam) + s(listless_gam) + s(sleepQuality_gam) + s(companyPleasant_gam) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_data[which(sc_data$phase=="peri"),])
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumNA_gam",
ylab = "Rumination", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumPA_gam",
ylab = "")
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumNA_gam",
ylab = "Rumination", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumPA_gam",
ylab = "")
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++ Peri-intervention models ++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
peri_dat <- sc_data[which(sc_data$phase=="peri"),]
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "stickiness_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "Rumination", view = "sumNA_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "sumPA_gam")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Assessment Number")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Stickiness")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Negative Affect")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Positive Affect")
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")))
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Assessment Number")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Stickiness")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Negative Affect")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Positive Affect")
par(mfrow=c(1,1))
#plot the model based predicted differences between interventions (summed effects)
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing")))
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")))
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination", ylab = c("Controls-Mindfulness", "Controls-Fantasizing", "Remitted-Mindfulness", "Remitted-Fantasizing"))
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination")
?plot_parametric
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination", parametricOnly = T)
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination", rm.ranef = T)
#and between groups
plot_parametric(rum.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination")
plot_smooth(rum.gam, view = "negMax", legend_plot_all = FALSE)
par(mfrow = c(3,2))
plot_smooth(rum.gam, view = "negMax", legend_plot_all = FALSE, ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "Rumination", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "listless", ylab = "Rumination", xlab = "Listless")
plot_smooth(rum.gam, view = "distracted", ylab = "Rumination", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "Rumination", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "Rumination", xlab = "Company Pleasantness")
plot_smooth(rum.gam, view = "negMax", legend_plot_all = FALSE, ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "listless", ylab = "Rumination", xlab = "Listless")
plot_smooth(rum.gam, view = "distracted", ylab = "", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "Rumination", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "", xlab = "Company Pleasantness")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab="Assessment Number")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Stickiness")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Negative Affect")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Positive Affect")
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
par(mfrow=c(1,1))
#plot the model based predicted differences between interventions (summed effects)
plot_parametric(na.peri, pred=list(intervention=c("mindfulness", "fantasizing")))
#and between groups
plot_parametric(na.peri, pred=list(intervention=c("mindfulness", "fantasizing"), group=c("controls", "remitted")),
main ="", xlab = "Rumination")
par(mfrow = c(3,3))
plot_smooth(na.peri, view = "negMax", legend_plot_all = FALSE, ylab = "Negative Affect", xlab = "Event Unpleasantness")
par(mfrow = c(3,3))
plot_smooth(na.peri, view = "negMax_gam", legend_plot_all = FALSE, ylab = "Negative Affect", xlab = "Event Unpleasantness")
plot_smooth(na.peri, view = "posMax_gam", ylab = "Negative Affect", xlab = "Event Pleasantness")
plot_smooth(na.peri, view = "stickiness_gam", ylab = "Negative Affect", xlab = "Stickiness")
plot_smooth(na.peri, view = "listless_gam", ylab = "Negative Affect", xlab = "Listless")
plot_smooth(na.peri, view = "distracted_gam", ylab = "Negative Affect", xlab = "Distracted")
plot_smooth(na.peri, view = "sleepQuality_gam", ylab = "Negative Affect", xlab = "Sleep Quality")
plot_smooth(na.peri, view = "companyPleasant_gam", ylab = "Negative Affect", xlab = "Company Pleasantness")
plot_smooth(na.peri, view = "negMax_gam", legend_plot_all = FALSE, ylab = "Negative Affect", xlab = "Event Unpleasantness")
plot_smooth(na.peri, view = "posMax_gam", ylab = "", xlab = "Event Pleasantness")
par(mfrow = c(3,3))
plot_smooth(na.peri, view = "negMax_gam", legend_plot_all = FALSE, ylab = "Negative Affect", xlab = "Event Unpleasantness")
plot_smooth(na.peri, view = "posMax_gam", ylab = "", xlab = "Event Pleasantness")
plot_smooth(na.peri, view = "stickiness_gam", ylab = "", xlab = "Stickiness")
plot_smooth(na.peri, view = "listless_gam", ylab = "Negative Affect", xlab = "Listless")
plot_smooth(na.peri, view = "distracted_gam", ylab = "", xlab = "Distracted")
plot_smooth(na.peri, view = "sleepQuality_gam", ylab = "", xlab = "Sleep Quality")
plot_smooth(na.peri, view = "companyPleasant_gam", ylab = "Negative Affect", xlab = "Company Pleasantness")
#removing companyPleasant
rum.gam11 <- gam(ruminating ~ group + s(phaseBeepNum, by = group) +
s(sumNA, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness, by = group) +
s(distracted) + s(listless) + s(sleepQuality) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(rum.gam11, rum.gam8) #significant <- rum.gam8 better
#removing companyPleasant
rum.gam12 <- bam(ruminating ~ group + s(phaseBeepNum, by = group) +
s(sumNA, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness, by = group) +
s(distracted) + s(listless) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(rum.gam8, rum.gam12) #significant <- rum.gam8 better
#removing interaction negMax x group
rum.gam13 <- bam(ruminating ~ group + s(phaseBeepNum, by = group) +
s(sumNA, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness, by = group) +
s(distracted) + s(sleepQuality) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(rum.gam13, rum.gam8) #rum.gam8 better
#removing listless
rum.gam14 <- bam(ruminating ~ group + s(phaseBeepNum, by = group) +
s(sumNA, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness, by = group) +
s(sleepQuality) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(rum.gam13, rum.gam14) #not significant rum.gam13 better
#refit without ML
rum.gam <- gam(ruminating ~ group + s(phaseBeepNum, by = group) +
s(sumNA, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness, by = group) +
s(distracted) + s(sleepQuality) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat)
rum.summary <- summary(rum.gam)
save(rum.gam, rum.summary, file = "models_rumination/rum_final_contemp.rda")
model1.acf <- acf_resid(rum.gam)
par(mfrow = c(1,1))
model1.acf <- acf_resid(rum.gam)
# removing companyPleasant
na.gam8 <- bam(sumNA ~ group + s(phaseBeepNum, by = group) +
s(ruminating, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness) +
s(distracted) + s(listless) + s(sleepQuality) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(na.gam8, na.gam5) #rum.gam5 better
# removing distracted
na.gam9 <- bam(sumNA ~ group + s(phaseBeepNum, by = group) +
s(ruminating, by = group) + s(sumPA, by = group) +
s(negMax) + s(posMax) + s(stickiness) +
s(listless) + s(sleepQuality) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(na.gam9, na.gam5) #rum.gam5 better
# removing stickiness
pa.gam7 <- gam(sumPA ~ group + s(phaseBeepNum, by = group) +
s(ruminating, by = group) + s(sumNA) +
s(negMax, by = group) + s(posMax, by = group) +
s(distracted) + s(listless) + s(sleepQuality) + s(companyPleasant) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = sc_baseDat, method = "ML")
compareML(pa.gam5, pa.gam7) #not significant --> pa.gam5 is better
rum.summary
model1.acf <- acf_resid(rum.gam)
param_tab <- parameters::model_parameters(rum.gam)
d <- t_to_d(param_tab$t[1:2], param_tab$df_error[1:2])
interpret_cohens_d(d[1])
report_stats(rum.gam)
par(mfrow = c(2,2))
plot_smooth(rum.gam, plot_all = "group", view = "phaseBeepNum", legend = FALSE,
main ="", ylab = "Rumination", xlab = "Assessment Number")
plot_smooth(rum.gam, plot_all = "group", view = "stickiness", legend = FALSE,
main ="", ylab = "", xlab = "Stickiness")
plot_smooth(rum.gam, plot_all = "group", view = "sumPA",
main ="", ylab = "Rumination", xlab = "Positive Affect")
plot_smooth(rum.gam, plot_all = "group", view = "sumNA", legend = FALSE,
main ="", ylab = "", xlab = "Negative Affect")
par(mfrow = c(3,2))
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "distracted", ylab = "Rumination", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "", xlab = "Company Pleasantness")
par(mfrow = c(3,2))
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "distracted", ylab = "Rumination", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "Rumination", xlab = "Company Pleasantness")
summary_rum.peri
#refitting the baseline model for peri phase (with change scores)
rum.peri <- gam(ruminating_gam ~ s(phaseBeepNum, by = interaction(group, intervention)) + group * intervention +
s(sumNA_gam, by = interaction(group, intervention)) + s(sumPA_gam, by = interaction(group, intervention)) +
s(negMax_gam) + s(posMax_gam) +
s(stickiness_gam, by = interaction(group, intervention)) +
s(distracted_gam) + s(sleepQuality_gam) + s(companyPleasant_gam) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = peri_dat)
summary_rum.peri <- summary(rum.peri)
save(rum.peri, summary_rum.peri, file="models_rumination/rum_peri.rda")
summary_rum.peri
param_tab <- parameters::model_parameters(rum.peri)
d <- t_to_d(param_tab$t[2:4], param_tab$df_error[2:4])
interpret_cohens_d(d[1])
report_stats(rum.peri)
#refitting the baseline model for peri phase (with change scores)
rum.peri.test <- gam(ruminating_gam ~ s(phaseBeepNum, by = interaction(group, intervention)) + group * intervention +
s(sumNA_gam, by = interaction(group, intervention)) + s(sumPA_gam, by = interaction(group, intervention)) +
s(negMax_gam) + s(posMax_gam) +
s(stickiness_gam, by = interaction(group, intervention)) +
s(distracted_gam) + s(sleepQuality_gam) + s(companyPleasant_gam) +
s(phaseBeepNum, by = subject, bs="fs", m=1),
data = peri_dat)
summary_rum.peri.test <- summary(rum.peri.test)
summary_rum.peri.test
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
par(mfrow = c(2,2))
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumNA_gam",
ylab = "Rumination", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumPA_gam",
ylab = "")
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "stickiness_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "Rumination", view = "sumNA_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "sumPA_gam")
par(mfrow = c(2,2))
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab="Assessment Number")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Stickiness")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Negative Affect")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Positive Affect")
plot_diff(rum.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Assessment Number")
plot_diff(rum.peri, view="stickiness_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Stickiness")
plot_diff(rum.peri, view="sumNA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Rumination", main = "", xlab = "Negative Affect")
plot_diff(rum.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Positive Affect")
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
par(mfrow = c(3,2))
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "distracted", ylab = "", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "Rumination", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "", xlab = "Company Pleasantness")
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "distracted", ylab = "Rumination", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "Rumination", xlab = "Company Pleasantness")
par(mfrow = c(3,2))
plot_smooth(rum.gam, view = "negMax", ylab = "Rumination", xlab = "Event Unpleasantness")
plot_smooth(rum.gam, view = "posMax", ylab = "", xlab = "Event Pleasantness")
plot_smooth(rum.gam, view = "distracted", ylab = "Rumination", xlab = "Distracted")
plot_smooth(rum.gam, view = "sleepQuality", ylab = "", xlab = "Sleep Quality")
plot_smooth(rum.gam, view = "companyPleasant", ylab = "Rumination", xlab = "Company Pleasantness")
rum.peri.test <- gam(ruminating_gam ~ s(phaseBeepNum, by = interaction(group, intervention)) + group * intervention +
s(sumNA_gam) + s(sumPA_gam) +
s(negMax_gam) + s(posMax_gam) +
s(stickiness_gam) +
s(distracted_gam) + s(sleepQuality_gam) + s(companyPleasant_gam) +
s(phaseBeepNum, by = subjB, bs="fs", m=1),
data = peri_dat)
summary_rum.peri.test <- summary(rum.peri.test)
summary_rum.peri.test
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "stickiness_gam",
ylab = "", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumNA_gam",
ylab = "Rumination", legend = FALSE)
plot_smooth(rum.peri.test, plot_all = c("intervention"), cond = list(group = "remitted"), view = "sumPA_gam",
ylab = "")
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "stickiness_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "Rumination", view = "sumNA_gam", legend = FALSE)
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"),
ylab = "", view = "sumPA_gam")
plot_smooth(rum.peri, plot_all = c("intervention"), cond = list(group = "controls"), view = "phaseBeepNum",
ylab = "Rumination", legend = F)
summary_na.peri
d <- t_to_d(param_tab_na$t[2:4], param_tab_na$df_error[2:4])
interpret_cohens_d(d[1])
report_stats(na.peri)
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5))
max(sc_data$ruminating_gam)
max(sc_data$ruminating_gam, na.rm=T)
max(sc_data$sumNA_gam, na.rm=T)
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5))
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5,))
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5,))
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5))
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
gam.check(na.peri)
par(mfrow = c(2,2))
plot_diff(na.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Assessment Number")
plot_diff(na.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination", ylim = c(-5,5))
plot_diff(na.peri, view="sumPA_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Negative Affect", main = "", xlab = "Positive Affect")
summary_pa.peri
d <- t_to_d(param_tab_pa$t[2:4], param_tab_pa$df_error[2:4])
interpret_cohens_d(d[1])
report_stats(pa.peri)
par(mfrow = c(2,2))
#remitted
plot_diff(pa.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Positive Affect", main = "", xlab = "Assessment Number")
plot_diff(pa.peri, view="ruminating_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(pa.peri, view="negMax_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Positive Affect", main = "", xlab = "Event Unpleasantness")
plot_diff(pa.peri, view="posMax_gam", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Event Pleasantness")
#controls
plot_diff(pa.peri, view="phaseBeepNum", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Positive Affect", main = "", xlab = "Assessment Number")
plot_diff(pa.peri, view="ruminating_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Rumination")
plot_diff(pa.peri, view="negMax_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "Positive Affect", main = "", xlab = "Event Unpleasantness")
plot_diff(pa.peri, view="posMax_gam", comp = list(group = c("controls", "controls"), intervention = c("fantasizing", "mindfulness")),
ylab = "", main = "", xlab = "Event Pleasantness")
#remitted
plot_diff(pa.peri, view="phaseBeepNum", comp = list(group = c("remitted", "remitted"), intervention = c("fantasizing", "mindfulness")),
ylab = "Positive Affect", main = "", xlab = "Assessment Number")

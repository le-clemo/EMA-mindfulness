p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 14.8, label = "*"), size = 10
)
SE_na1 <- summarySE(data[which((data$block==1)),], measurevar = "meanNA", groupvars = c("group", "phase"),
na.rm = T)
SE_na1$group <- factor(SE_na1$group, levels = c("controls", "remitted"))
levels(SE_na1$group) <- c("HC", "rMDD")
SE_na1$phase <- factor(SE_na1$phase, levels = c("pre", "peri"))
levels(SE_na1$phase) <- c("Pre", "Peri")
p2 <- ggplot(SE_na1[which(SE_na1$phase=="Pre"),], aes(y =  meanNA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanNA-se, ymax = meanNA+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(5,25) +
single_plot_theme() +
ylab("Negative Affect") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_blank(),
axis.title.x=element_blank()) +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 11.2, label = "*"), size = 10
)
SE_pa1 <- summarySE(data[which((data$block==1)),], measurevar = "meanPA", groupvars = c("group", "phase"),
na.rm = T)
SE_pa1$group <- factor(SE_pa1$group, levels = c("controls", "remitted"))
levels(SE_pa1$group) <- c("HC", "rMDD")
SE_pa1$phase <- factor(SE_pa1$phase, levels = c("pre", "peri"))
levels(SE_pa1$phase) <- c("Pre", "Peri")
p3 <- ggplot(SE_pa1[which(SE_pa1$phase=="Pre"),], aes(y =  meanPA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanPA-se, ymax = meanPA+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(50,70) +
single_plot_theme() +
ylab("Positive Affect") +
xlab("Group") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_text(size=15)) +
scale_fill_manual(values=group.colors)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)
#read in data
data <- read.csv('preprocessed_data.csv')
#Pick response rate cut-off value
cutOff <- 0.5
################################# response-related measures #####################################
# #group by id and count the number of nonresponses
participant_responses <- ddply(data, .(subject, group), plyr::summarise,
numBeeped = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeped - noResponse,
responseRate = round(response/numBeeped,2),
numDays = max(assessmentDay))
#number of participants so far
length(unique(data$subject)) #39 associated with a group
#number of responses
sum(participant_responses$response) #~6000+
#the mean response rate is ~67%
meanResponseRate <- mean(participant_responses$responseRate)
#sd of 18.29
sdResponseRate <- sd(participant_responses$responseRate)
sdResponseRateCon <- round(sd(participant_responses[which(participant_responses$group == "controls"),]$responseRate), 2)
sdResponseRateRem <- round(sd(participant_responses[which(participant_responses$group == "remitted"),]$responseRate), 2)
quantile(participant_responses$responseRate, probs = c(.1, .9))
quantile(participant_responses[which(participant_responses$group == "controls"),]$responseRate, probs = c(.1, .9))
quantile(participant_responses[which(participant_responses$group == "remitted"),]$responseRate, probs = c(.1, .9))
group_responses <- ddply(data, .(group), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2),
SDResponseRate = round(sd(responseRate, na.rm = TRUE),2))
group_responses_baseline <- ddply(data[which(data$phase=="pre"),], .(group), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2),
SDResponseRate = round(sd(response/numBeeps, na.rm = TRUE), 2))
#recreacting with assessment days per group, intervention, block, phase
full_split <- ddply(data, .(group, intervention, block, phase), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2))
#recreacting with assessment days per group
intervention_responses <- ddply(data, .(group, intervention), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2))
responses_by_phase <- ddply(data, .(group, intervention, phase), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2))
#group by phase
groupXphase <- ddply(data, .(group, phase), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2),
SDResponseRate = round(sd(responseRate, na.rm = TRUE),2))
responses_block <- ddply(data, .(block), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2),
SDResponseRate = round(sd(responseRate, na.rm = TRUE),2))
responses_phase <- ddply(data, .(phase), plyr::summarise,
nSubj = length(unique(subject)),
numBeeps = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeps - noResponse,
responseRate = round(response/numBeeps,2),
SDResponseRate = round(sd(responseRate, na.rm = TRUE),2))
#Chi-squared tests
#group difference?
chisq.test(group_responses[,c("noResponse", "response")]) #significant difference
chisq.test(group_responses_baseline[,c("noResponse", "response")]) #significant difference
#general difference between blocks
chisq.test(responses_block[, c("noResponse", "response")])
#general difference between phases
chisq.test(responses_phase[, c("noResponse", "response")])
#difference by phase (groupXintervention)?
groups <- c("controls", "remitted")
interventions <- c("fantasizing", "mindfulness")
for(g in groups){
for(int in interventions){
print(paste(g, int, sep = " + "))
responses <- responses_by_phase[which((responses_by_phase$group==g) & (responses_by_phase$intervention==int)),]
print(chisq.test(responses[, c("noResponse", "response")]))
}
} #response rates are always worse in peri
responses_block <- ddply(data, .(subject, group), plyr::summarise,
numBeeped = length(mindcog_db_open_from),
noResponse = length(unique(mindcog_db_non_response)),
response = numBeeped - noResponse,
responseRate = round(response/numBeeped,2),
numDays = max(assessmentDay))
data$subjB <- interaction(data$subject, data$block, drop = TRUE)
meanResponseRate_block <- mean(responses_block$responseRate) #the mean response rate is ~67.6%
length(unique(responses_block[which(responses_block$responseRate >= meanResponseRate_block),]$subject)) #20
length(unique(responses_block[which(responses_block$responseRate >= 0.6),]$subject)) #26
length(unique(responses_block[which(responses_block$responseRate >= 0.5),]$subject)) #33
length(unique(responses_block[which(responses_block$group == "remitted"),]$subject)) #16
length(unique(responses_block[which(responses_block$group == "controls"),]$subject)) #23
#removing participants with a response rate lower than 50%
pp <- unique(responses_block[which(responses_block$responseRate >= cutOff),]$subject)
data <- data[which(data$subject %in% pp),]
length(unique(data[which(data$group == "remitted"),]$subject)) #12
#######################################################################################################################
met.vars <- c("ruminating", "meanNA", "meanPA")
#in addition we create a new list which includes both the changed and unchanged met.vars for scaling later on
scale.vars <- c(rep(NA, length(met.vars)*3))
i = 0
for(v in met.vars){
new_var <- paste(v, "_diff", sep = "")
data[[new_var]] <- NA
gam_var <- paste(v, "_gam", sep = "")
data[[gam_var]] <- NA
i = i+1
scale.vars[[i]] <- v
i = i+1
scale.vars[[i]] <- new_var
i = i+1
scale.vars[[i]] <- gam_var
for(id in unique(data$subject)){
for(b in 1:2){
pre_rows <- which((data$subject == id) & (data$phase=="pre") & (data$block==b))
peri_rows <- which((data$subject == id) & (data$phase=="peri") & (data$block==b))
s_rows <- which((data$subject == id) & (data$block==b))
baselineMean <- mean(data[[v]][pre_rows], na.rm=TRUE)
if(is.na(baselineMean)){
baselineMean <- 0
}
data[[new_var]][s_rows] <- round(data[[v]][s_rows] - baselineMean, 2)
data[[gam_var]][pre_rows] <- NA
data[[gam_var]][peri_rows] <- round(data[[v]][peri_rows] - baselineMean, 2)
}
}
}
meltDat <-  within( melt(data[which(data$phase=="peri"),][, c(idVars, "ruminating_gam", "meanNA_gam", "meanPA_gam"),], id.vars = idVars), {
variable<- gsub("\\_.*","",variable)
Mean<- ave(value, group, intervention, variable, FUN=function(x) mean(x,na.rm=T))
SD <- ave(value, group, intervention, variable, FUN=function(x) sd(x,na.rm=T))}) #subject
muh_grob <- grid::rectGrob(
x=1:2, y=0, gp=gpar(
colour="#D5E4EB",fill="#D5E4EB"))
group.colors = c(HC = "#619CFF", rMDD = "#F8766D")
SE_rum1 <- summarySE(data[which((data$block==1)),], measurevar = "ruminating", groupvars = c("group", "phase"),
na.rm = T)
SE_rum1$group <- factor(SE_rum1$group, levels = c("controls", "remitted"))
levels(SE_rum1$group) <- c("HC", "rMDD")
SE_rum1$phase <- factor(SE_rum1$phase, levels = c("pre", "peri"))
levels(SE_rum1$phase) <- c("Pre", "Peri")
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 14.8, label = "*"), size = 10
)
SE_na1 <- summarySE(data[which((data$block==1)),], measurevar = "meanNA", groupvars = c("group", "phase"),
na.rm = T)
SE_na1$group <- factor(SE_na1$group, levels = c("controls", "remitted"))
levels(SE_na1$group) <- c("HC", "rMDD")
SE_na1$phase <- factor(SE_na1$phase, levels = c("pre", "peri"))
levels(SE_na1$phase) <- c("Pre", "Peri")
p2 <- ggplot(SE_na1[which(SE_na1$phase=="Pre"),], aes(y =  meanNA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanNA-se, ymax = meanNA+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(5,25) +
single_plot_theme() +
ylab("Negative Affect") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_blank(),
axis.title.x=element_blank()) +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 11.2, label = "*"), size = 10
)
SE_pa1 <- summarySE(data[which((data$block==1)),], measurevar = "meanPA", groupvars = c("group", "phase"),
na.rm = T)
SE_pa1$group <- factor(SE_pa1$group, levels = c("controls", "remitted"))
levels(SE_pa1$group) <- c("HC", "rMDD")
SE_pa1$phase <- factor(SE_pa1$phase, levels = c("pre", "peri"))
levels(SE_pa1$phase) <- c("Pre", "Peri")
p3 <- ggplot(SE_pa1[which(SE_pa1$phase=="Pre"),], aes(y =  meanPA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanPA-se, ymax = meanPA+se),width = 0.5, color = group.colors, size=0.5) +
geom_point(size = 3, color = group.colors)+
ylim(50,70) +
single_plot_theme() +
ylab("Positive Affect") +
xlab("Group") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_text(size=15)) +
scale_fill_manual(values=group.colors)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)
p3 <- ggplot(SE_pa1[which(SE_pa1$phase=="Pre"),], aes(y =  meanPA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanPA-se, ymax = meanPA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(50,70) +
single_plot_theme() +
ylab("Positive Affect") +
xlab("Group") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_text(size=15)) +
scale_fill_manual(values=group.colors)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 14.8, label = "*"), size = 10
)
p2 <- ggplot(SE_na1[which(SE_na1$phase=="Pre"),], aes(y =  meanNA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanNA-se, ymax = meanNA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Negative Affect") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_blank(),
axis.title.x=element_blank()) +
scale_fill_manual(values=group.colors) +
geom_text(
mapping = aes(x = 1.5, y = 11.2, label = "*"), size = 10
)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 14, label = "*"), size = 10
)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 13, label = "*"), size = 10
)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 13.5, label = "*"), size = 10
)
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 13.3, label = "*"), size = 10
)
SE_na1 <- summarySE(data[which((data$block==1)),], measurevar = "meanNA", groupvars = c("group", "phase"),
na.rm = T)
SE_na1$group <- factor(SE_na1$group, levels = c("controls", "remitted"))
levels(SE_na1$group) <- c("HC", "rMDD")
SE_na1$phase <- factor(SE_na1$phase, levels = c("pre", "peri"))
levels(SE_na1$phase) <- c("Pre", "Peri")
p2 <- ggplot(SE_na1[which(SE_na1$phase=="Pre"),], aes(y =  meanNA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanNA-se, ymax = meanNA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Negative Affect") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_blank(),
axis.title.x=element_blank()) +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 11.2, label = "*"), size = 10
)
SE_pa1 <- summarySE(data[which((data$block==1)),], measurevar = "meanPA", groupvars = c("group", "phase"),
na.rm = T)
SE_pa1$group <- factor(SE_pa1$group, levels = c("controls", "remitted"))
levels(SE_pa1$group) <- c("HC", "rMDD")
SE_pa1$phase <- factor(SE_pa1$phase, levels = c("pre", "peri"))
levels(SE_pa1$phase) <- c("Pre", "Peri")
p3 <- ggplot(SE_pa1[which(SE_pa1$phase=="Pre"),], aes(y =  meanPA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanPA-se, ymax = meanPA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(50,70) +
single_plot_theme() +
ylab("Positive Affect") +
xlab("Group") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_text(size=15)) +
scale_fill_manual(values=rev(group.colors))
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)
p1 <- ggplot(SE_rum1[which(SE_rum1$phase=="Pre"),], aes(y =  ruminating, x=group, group=1), color = group) +
geom_line(color = c("black"), size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = ruminating-se, ymax = ruminating+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Rumination") +
# facet_grid(.~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
# axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
# coord_cartesian(clip='off') +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 13.4, label = "*"), size = 10
)
SE_na1 <- summarySE(data[which((data$block==1)),], measurevar = "meanNA", groupvars = c("group", "phase"),
na.rm = T)
SE_na1$group <- factor(SE_na1$group, levels = c("controls", "remitted"))
levels(SE_na1$group) <- c("HC", "rMDD")
SE_na1$phase <- factor(SE_na1$phase, levels = c("pre", "peri"))
levels(SE_na1$phase) <- c("Pre", "Peri")
p2 <- ggplot(SE_na1[which(SE_na1$phase=="Pre"),], aes(y =  meanNA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanNA-se, ymax = meanNA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(5,25) +
single_plot_theme() +
ylab("Negative Affect") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_blank(),
axis.title.x=element_blank()) +
scale_fill_manual(values=rev(group.colors)) +
geom_text(
mapping = aes(x = 1.5, y = 11.2, label = "*"), size = 10
)
SE_pa1 <- summarySE(data[which((data$block==1)),], measurevar = "meanPA", groupvars = c("group", "phase"),
na.rm = T)
SE_pa1$group <- factor(SE_pa1$group, levels = c("controls", "remitted"))
levels(SE_pa1$group) <- c("HC", "rMDD")
SE_pa1$phase <- factor(SE_pa1$phase, levels = c("pre", "peri"))
levels(SE_pa1$phase) <- c("Pre", "Peri")
p3 <- ggplot(SE_pa1[which(SE_pa1$phase=="Pre"),], aes(y =  meanPA, x=group, group=1), color = group) +
geom_line(color = "black", size=1, alpha = 0.15) +
geom_errorbar(aes(ymin = meanPA-se, ymax = meanPA+se),width = 0.5, color = rev(group.colors), size=0.5) +
geom_point(size = 3, color = rev(group.colors))+
ylim(50,70) +
single_plot_theme() +
ylab("Positive Affect") +
xlab("Group") +
# facet_grid(factor(intervention)~factor(group), scale = "free") +
theme(legend.position="none", strip.text.x = element_text(size = 15),
strip.text.y = element_text(size =15),
axis.text.x = element_text(size=15)) +
scale_fill_manual(values=rev(group.colors))
rq1_plot <- grid.arrange(p1, p2, p3, nrow=3)
ggsave(rq1_plot, file="rq1_group_diff.pdf", width = 4, height = 10)

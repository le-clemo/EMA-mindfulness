abline(reg_pre, col = "red")
cor(rlag1_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ NA_peri)
abline(reg_peri, col = "green")
PA_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$sumPA
r_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$ruminating
rlag1_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$ruminating_lag1
NA_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$sumNA
PA_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$sumPA
r_peri <- remitted_fa[which(remitted_fa$phase=="peri"),]$ruminating
rlag1_peri <- remitted_fa[which(remitted_fa$phase=="peri"),]$ruminating_lag1
NA_peri <- remitted_fa[which(remitted_fa$phase=="peri"),]$sumNA
PA_peri <- remitted_fa[which(remitted_fa$phase=="peri"),]$sumPA
#PA
plot(r_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(r_peri, PA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, PA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ PA_pre)
abline(reg_pre, col = "red")
cor(r_peri, PA_peri, use = "complete.obs")
reg_peri <- lm(r_peri ~ PA_peri)
abline(reg_peri, col = "green")
#with ruminating_lag1 and PA
plot(rlag1_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(rlag1_peri, PA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(rlag1_pre, PA_pre, use = "complete.obs")
reg_pre <- lm(rlag1_pre ~ PA_pre)
abline(reg_pre, col = "red")
cor(rlag1_peri, PA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ PA_peri)
abline(reg_peri, col = "green")
#for mindfulness group
r_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$ruminating
#for mindfulness group
r_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$ruminating
rlag1_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$ruminating_lag1
NA_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$sumNA
PA_pre <- remitted_fa[which(remitted_fa$phase=="pre"),]$sumPA
r_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$ruminating
rlag1_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$ruminating_lag1
NA_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$sumNA
PA_peri <- remitted_fa[which(remitted_fa$phase=="peri"),]$sumPA
#NA
plot(r_pre, NA_pre, col = "red", main = "Remitted, mindfulness", ylab="Negative Affect", xlab="Rumination")
points(r_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(r_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(r_peri ~ NA_peri)
abline(reg_peri, col = "green")
#with ruminating_lag1
plot(rlag1_pre, NA_pre, col = "red", main = "Remitted, fantasizing", ylab="Negative Affect", xlab="Rumination (lag1)")
points(rlag1_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(rlag1_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(rlag1_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(rlag1_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ NA_peri)
abline(reg_peri, col = "green")
#PA
plot(r_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(r_peri, PA_peri, col = "green")
#for mindfulness group
r_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$ruminating
rlag1_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$ruminating_lag1
NA_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$sumNA
PA_pre <- remitted_mf[which(remitted_mf$phase=="pre"),]$sumPA
r_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$ruminating
rlag1_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$ruminating_lag1
NA_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$sumNA
PA_peri <- remitted_mf[which(remitted_mf$phase=="peri"),]$sumPA
#NA
plot(r_pre, NA_pre, col = "red", main = "Remitted, mindfulness", ylab="Negative Affect", xlab="Rumination")
points(r_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(r_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(r_peri ~ NA_peri)
abline(reg_peri, col = "green")
#with ruminating_lag1
plot(rlag1_pre, NA_pre, col = "red", main = "Remitted, fantasizing", ylab="Negative Affect", xlab="Rumination (lag1)")
points(rlag1_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(rlag1_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(rlag1_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(rlag1_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ NA_peri)
abline(reg_peri, col = "green")
#PA
plot(r_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(r_peri, PA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, PA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ PA_pre)
abline(reg_pre, col = "red")
#with ruminating_lag1
plot(rlag1_pre, NA_pre, col = "red", main = "Remitted, fantasizing", ylab="Negative Affect", xlab="Rumination (lag1)")
#NA
plot(r_pre, NA_pre, col = "red", main = "Remitted, mindfulness", ylab="Negative Affect", xlab="Rumination")
points(r_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(r_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(r_peri ~ NA_peri)
abline(reg_peri, col = "green")
#with ruminating_lag1
plot(rlag1_pre, NA_pre, col = "red", main = "Remitted, fantasizing", ylab="Negative Affect", xlab="Rumination (lag1)")
points(rlag1_peri, NA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(rlag1_pre, NA_pre, use = "complete.obs")
reg_pre <- lm(rlag1_pre ~ NA_pre)
abline(reg_pre, col = "red")
cor(rlag1_peri, NA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ NA_peri)
abline(reg_peri, col = "green")
#PA
plot(r_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(r_peri, PA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(r_pre, PA_pre, use = "complete.obs")
reg_pre <- lm(r_pre ~ PA_pre)
abline(reg_pre, col = "red")
cor(r_peri, PA_peri, use = "complete.obs")
reg_peri <- lm(r_peri ~ PA_peri)
abline(reg_peri, col = "green")
#with ruminating_lag1 and PA
plot(rlag1_pre, PA_pre, col = "red", main = "Remitted, fantasizing", ylab="Positive Affect", xlab="Rumination")
points(rlag1_peri, PA_peri, col = "green")
legend("topleft", legend=c("Pre", "Peri"), col=c("red", "green"), pch=c(1,1))
cor(rlag1_pre, PA_pre, use = "complete.obs")
reg_pre <- lm(rlag1_pre ~ PA_pre)
abline(reg_pre, col = "red")
cor(rlag1_peri, PA_peri, use = "complete.obs")
reg_peri <- lm(rlag1_peri ~ PA_peri)
abline(reg_peri, col = "green")
#
aggData <- with(data, aggregate(list(ruminating = ruminating, stickiness = stickiness,
sumNA = sumNA, sumPA = sumPA),
by = list(group = group, intervention = intervention,
blockAssessmentDay = blockAssessmentDay),
FUN = function(x) { mon.mean = mean(x, na.rm = TRUE) } ))
p1 <- ggplot(aggData, aes(x = blockAssessmentDay, y = sumNA,
colour = interaction(group, intervention), group = interaction(group, intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)), legend.direction = "horizontal",
legend.position = c(1,0.925)) + guides(color=guide_legend(NULL))+
geom_vline(xintercept = 7, linetype="dashed")
p2 <- ggplot(aggData, aes(x = blockAssessmentDay, y = sumPA,
colour = interaction(group, intervention), group = interaction(group, intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed")
p3 <- ggplot(aggData, aes(x = blockAssessmentDay, y = ruminating,
colour = interaction(group, intervention), group = interaction(group, intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed")
p4 <- ggplot(aggData, aes(x = blockAssessmentDay, y = stickiness,
colour = interaction(group, intervention), group = interaction(group, intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed")
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1, p2, p3, p4, legend, ncol=2, nrow = 3)
aggData <- with(data, aggregate(list(ruminating = ruminating, stickiness = stickiness,
sumNA = sumNA, sumPA = sumPA),
by = list(group = group, intervention = intervention,
assessmentDay = assessmentDay),
FUN = function(x) { mon.mean = mean(x, na.rm = TRUE) } ))
p1 <- ggplot(aggData, aes(x = assessmentDay, y = sumNA,
colour = interaction(group, intervention), group = interaction(group,intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)), legend.direction = "horizontal",
legend.position = c(1,0.925)) + guides(color=guide_legend(NULL))+
geom_vline(xintercept = 7, linetype="dashed") +
geom_vline(xintercept = 14, linetype="solid",) +
geom_vline(xintercept = 21, linetype="dashed")
p2 <- ggplot(aggData, aes(x = assessmentDay, y = sumPA,
colour = interaction(group, intervention), group = interaction(group,intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed") +
geom_vline(xintercept = 14, linetype="solid",) + geom_vline(xintercept = 21, linetype="dashed")
p3 <- ggplot(aggData, aes(x = assessmentDay, y = ruminating,
colour = interaction(group, intervention), group = interaction(group,intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed") +
geom_vline(xintercept = 14, linetype="solid",) + geom_vline(xintercept = 21, linetype="dashed")
p4 <- ggplot(aggData, aes(x = assessmentDay, y = stickiness,
colour = interaction(group, intervention), group = interaction(group,intervention))) +
stat_summary(fun = sum, geom = "line") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") + geom_vline(xintercept = 7, linetype="dashed") +
geom_vline(xintercept = 14, linetype="solid",) + geom_vline(xintercept = 21, linetype="dashed")
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1, p2, p3, p4, legend, ncol=2, nrow = 3)
group_PANA <- ddply(data, .(group), plyr::summarize,
n_Subj = length(unique(subject)),
Pos = mean(sumPA, na.rm = TRUE),
sdPA = sd(sumPA, na.rm = TRUE),
Neg = mean(sumNA, na.rm = TRUE),
sdNA = sd(sumNA, na.rm = TRUE))
phase_PANA <- ddply(data, .(group, phase), plyr::summarize,
n_Subj = length(unique(subject)),
Pos = mean(sumPA, na.rm = TRUE),
sdPA = sd(sumPA, na.rm = TRUE),
Neg = mean(sumNA, na.rm = TRUE),
sdNA = sd(sumNA, na.rm = TRUE))
block_PANA <- ddply(data, .(group, block, intervention, phase), plyr::summarize,
n_Subj = length(unique(subject)),
Pos = mean(sumPA, na.rm = TRUE),
sdPA = sd(sumPA, na.rm = TRUE),
Neg = mean(sumNA, na.rm = TRUE),
sdNA = sd(sumNA, na.rm = TRUE))
#for some strange dplyr-ralted reason I need to do this to get melt() to work
data <- as.data.frame(data)
# check baseline assessment per group (Block 1, pre)
meltData1 <- melt(data[which((data$phase=="pre") & (data$block==1)), c("group", "sumPA", "sumNA")], na.rm = TRUE)
meltData2 <- melt(data[which((data$phase=="peri") & (data$block==1)), c("group", "sumPA", "sumNA")], na.rm = TRUE)
meltData3 <- melt(data[which((data$phase=="pre") & (data$block==2)), c("group", "sumPA", "sumNA")], na.rm = TRUE)
meltData4 <- melt(data[which((data$phase=="peri") & (data$block==2)), c("group", "sumPA", "sumNA")], na.rm = TRUE)
p1 <- ggplot(meltData1, aes(factor(variable), value, fill = group))
p1 <- p1 + geom_boxplot() + facet_wrap(~"block", scale="free") +
ggtitle("Block 1 - Pre") +
scale_fill_manual(values = c("green", "red")) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)), legend.direction = "horizontal",
legend.position = c(1,1))
p2 <- ggplot(meltData2, aes(factor(variable), value, fill = group))
p2 <- p2 + geom_boxplot() + facet_wrap(~"block", scale="free") +
ggtitle("Block 1 - Peri") +
scale_fill_manual(values = c("green", "red")) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None")
p3 <- ggplot(meltData3, aes(factor(variable), value, fill = group))
p3 <- p3 + geom_boxplot() + facet_wrap(~"block", scale="free") +
ggtitle("Block 2 - Pre") +
scale_fill_manual(values = c("green", "red")) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None")
p4 <- ggplot(meltData4, aes(factor(variable), value, fill = group))
p4 <- p4 + geom_boxplot() + facet_wrap(~"block", scale="free") +
ggtitle("Block 2 - Peri") +
scale_fill_manual(values = c("green", "red")) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None")
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1, p2, p3, p4, legend, ncol=2, nrow = 3)
meltData <- melt(data, id.vars=c("group", "intervention", "phase", "block"),
measure.vars = c("sumPA", "sumNA"), na.rm = TRUE)
meltData$groupByInt <- factor(paste(meltData$group, meltData$intervention),
levels = c("controls mindfulness", "controls fantasizing",
"remitted mindfulness", "remitted fantasizing"))
meltData$blockPhase <- factor(paste(meltData$phase, meltData$block, sep = " "),
levels = c("pre 1", "peri 1", "pre 2", "peri 2"))
ggplot(data = meltData, aes(variable, y = value, fill = factor(group))) +
geom_boxplot() + facet_grid(factor(intervention) ~ blockPhase, scale = "free") +
labs(title = "Levels of PA and NA",
subtitle = " by group, intervention, block and phase",
y = "Raw score", x = "") + scale_fill_manual(values = c("green", "red"))
#Plotting changes against average baseline assessment values
#per phaseBeepNum
#create a df with only the relevant variables
meltChange <- melt(data[which(data$phase=="peri"),], id.vars=c("group", "intervention", "phase", "block", "phaseBeepNum"),
measure.vars = c("sumPA", "sumNA"), na.rm = TRUE)
#cacluate the average values per phaseBeepNum
meltChange_avg <- ddply(meltChange, .(group, intervention, phase, block, phaseBeepNum, variable), plyr::summarise,
n_values = length(group),
avgValue = mean(value),
sdValue = sd(value))
#plot the average values of sumPA and sumNA (peri) against the average of the baseline assessment periods (pre)
for(b in 1:2){
for(g in c("controls", "remitted")){
for(intervention in c('mindfulness', 'fantasizing')){
for(v in c('sumPA', 'sumNA')){
if(v == 'sumPA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$block==b) & (data$group==g) &
(data$intervention==intervention)),]$sumPA, na.rm=TRUE)
color <- "green"
lab_y <- "Avg change in PA"
main <- "Change in Positive Affect per individual assessment compared to baseline mean"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, block", b, ")")
}
if(v == 'sumNA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$block==b) & (data$group==g) &
(data$intervention==intervention)),]$sumNA, na.rm=TRUE)
color <- "red"
lab_y <- "Avg change in NA"
main <- "Change in Negative Affect per individual assessment compared to baseline mean"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, block", b, ")")
}
px <- ggplot(data = meltChange_avg[which((meltChange_avg$group==g) &
(meltChange_avg$block==b) &
(meltChange_avg$variable==v) &
(meltChange_avg$intervention==intervention)),],
aes(x=phaseBeepNum, y=avgValue-meanVal)) +
geom_line(color = color) + geom_point() + scale_fill_manual(values=color) +
labs(title=main, subtitle=subtitle) + xlab('Phase Assessment Number') + ylab(lab_y) +
geom_errorbar(aes(ymin=avgValue-sdValue-meanVal, ymax=avgValue+sdValue-meanVal), width=.2,
position=position_dodge(.9))
print(px)
}
}
}
}
#both blocks
#cacluate the average values per phaseBeepNum
meltChange_avg <- ddply(meltChange, .(group, intervention, phase, phaseBeepNum, variable), plyr::summarise,
n_values = length(group),
avgValue = mean(value),
sdValue = sd(value))
#plot the average values of sumPA and sumNA (peri) against the average of the baseline assessment periods (pre)
for(b in 1:2){
for(g in c("controls", "remitted")){
for(intervention in c('mindfulness', 'fantasizing')){
for(v in c('sumPA', 'sumNA')){
if(v == 'sumPA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$group==g) &
(data$intervention==intervention)),]$sumPA, na.rm=TRUE)
color <- "green"
lab_y <- "Avg change in PA"
main <- "Change in Positive Affect per individual assessment compared to baseline mean"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, both blocks )")
}
if(v == 'sumNA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$group==g) &
(data$intervention==intervention)),]$sumNA, na.rm=TRUE)
color <- "red"
lab_y <- "Avg change in NA"
main <- "Change in Negative Affect per individual assessment compared to baseline mean"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, both blocks )")
}
px <- ggplot(data = meltChange_avg[which((meltChange_avg$group==g) &
(meltChange_avg$variable==v) &
(meltChange_avg$intervention==intervention)),],
aes(x=phaseBeepNum, y=avgValue-meanVal)) +
geom_line(color = color) + geom_point() + scale_fill_manual(values=color) +
labs(title=main, subtitle=subtitle) + xlab('Phase Assessment Number') + ylab(lab_y) +
geom_errorbar(aes(ymin=avgValue-sdValue-meanVal, ymax=avgValue+sdValue-meanVal), width=.2,
position=position_dodge(.9))
print(px)
}
}
}
}
#per Assessment day
#create a df with only the relevant variables
meltChange <- melt(data[which(data$phase=="peri"),], id.vars=c("group", "intervention", "phase", "block", "phaseAssessmentDay"),
measure.vars = c("sumPA", "sumNA"), na.rm = TRUE)
#cacluate the average values per phaseBeepNum
meltChange_avg <- ddply(meltChange, .(group, intervention, phase, block, phaseAssessmentDay, variable), plyr::summarise,
n_values = length(group),
avgValue = mean(value),
sdValue = sd(value))
#plot the average values of sumPA and sumNA (peri) against the average of the baseline assessment periods (pre)
for(b in 1:2){
for(g in c("controls", "remitted")){
for(intervention in c('mindfulness', 'fantasizing')){
for(v in c('sumPA', 'sumNA')){
if(v == 'sumPA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$block==b) & (data$group==g) &
(data$intervention==intervention)),]$sumPA, na.rm=TRUE)
color <- "green"
lab_y <- "Avg change in PA"
main <- "Change in Positive Affect per Assessment Day compared to baseline"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, block", b, ")")
}
if(v == 'sumNA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$block==b) & (data$group==g) &
(data$intervention==intervention)),]$sumNA, na.rm=TRUE)
color <- "red"
lab_y <- "Avg change in NA"
main <- "Change in Negative Affect per Assessment Day compared to baseline"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, block", b, ")")
}
px <- ggplot(data = meltChange_avg[which((meltChange_avg$group==g) &
(meltChange_avg$block==b) &
(meltChange_avg$variable==v) &
(meltChange_avg$intervention==intervention)),],
aes(x=phaseAssessmentDay, y=avgValue-meanVal)) +
geom_line(color = color) + geom_point() + scale_fill_manual(values=color) +
labs(title=main, subtitle=subtitle) + xlab('Phase Assessment Day') + ylab(lab_y) +
geom_errorbar(aes(ymin=avgValue-sdValue-meanVal, ymax=avgValue+sdValue-meanVal), width=.2,
position=position_dodge(.9))
print(px)
}
}
}
}
meltChange_avg <- ddply(meltChange, .(group, intervention, phase, phaseAssessmentDay, variable), plyr::summarise,
n_values = length(group),
avgValue = mean(value),
sdValue = sd(value))
#combining both blocks
for(g in c("controls", "remitted")){
for(intervention in c('mindfulness', 'fantasizing')){
for(v in c('sumPA', 'sumNA')){
if(v == 'sumPA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$group==g) &
(data$intervention==intervention)),]$sumPA, na.rm=TRUE)
color <- "green"
lab_y <- "Avg change in PA"
main <- "Change in Positive Affect per Assessment Day compared to baseline"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, both blocks)")
}
if(v == 'sumNA'){
meanVal <- mean(data[which((data$phase=="pre") & (data$group==g) &
(data$intervention==intervention)),]$sumNA, na.rm=TRUE)
color <- "red"
lab_y <- "Avg change in NA"
main <- "Change in Negative Affect per Assessment Day compared to baseline"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, both blocks)")
}
px <- ggplot(data = meltChange_avg[which((meltChange_avg$group==g) &
(meltChange_avg$variable==v) &
(meltChange_avg$intervention==intervention)),],
aes(x=phaseAssessmentDay, y=avgValue-meanVal)) +
geom_line(color = color) + geom_point() + scale_fill_manual(values=color) +
labs(title=main, subtitle=subtitle) + xlab('Phase Assessment Day') + ylab(lab_y) +
geom_errorbar(aes(ymin=avgValue-sdValue-meanVal, ymax=avgValue+sdValue-meanVal), width=.2,
position=position_dodge(.9))
print(px)
}
}
}
dependent_var <- "ruminating"
remittedIDs <-  unique(data[which((data$group == "remitted") & (data$block==1) & (data$phase=="pre")),]$subject) #get a list of all unique IDs
set.seed(234)
remittedSample <- sample(remittedIDs, 3)
contIDs <-  unique(data[which((data$group == "controls") & (data$block==1) & (data$phase=="pre")),]$subject) #get a list of all unique IDs
contSample <- sample(contIDs, 3)
randData1 <- data[data$subject %in% remittedSample,]
randData2 <- data[data$subject %in% contSample,]
meltData1 <- melt(randData1, id = c("subject", "phaseAssessmentDay", "phaseBeepNum"), measure.vars = dependent_var)
meltData2 <- melt(randData2, id = c("subject", "phaseAssessmentDay", "phaseBeepNum"), measure.vars = dependent_var)
#for x: use phaseBeepNum for time or another variable to see relationship
p1 <- ggplot(meltData1,aes(x=phaseBeepNum,y=value,colour=factor(subject), group = variable)) +
geom_line() + geom_smooth(method='lm')
p2 <- ggplot(meltData2,aes(x=phaseBeepNum,y=value,colour=factor(subject), group = variable)) +
geom_line() + geom_smooth(method='lm')
#to split one plot into a grid of multiple plots
p1 <- p1 + facet_grid(rows = vars(factor(subject))) + xlab("Assessment Number") + ylab(dependent_var)
p2 <- p2 + facet_grid(rows = vars(factor(subject))) + xlab("Assessment Number") + ylab(dependent_var)
p1 <- p1 + theme(legend.position="None")
p2 <- p2 + theme(legend.position="None") #+ geom_vline(xintercept = assessmentDay, linetype = "dashed", color = "red")
figure <- ggarrange(p1, p2,
labels = c("Remitted", "Controls"),
ncol = 2, nrow = 1)#, common.legend = TRUE)
figure
#time spent thinking about the past / present / future by group, phase and block
pc_time <- ddply(data, .(group, phase, block), plyr::summarize,
N = length(group[which(!is.na(thoughtsTime))]),
past = round(length(group[which(thoughtsTime == 1)])/N, 2),
present = round(length(group[which(thoughtsTime == 2)])/N, 2),
future = round(length(group[which(thoughtsTime == 3)])/N, 2))
#per Assessment day
#create a df with only the relevant variables
meltChange <- melt(data[which(data$phase=="peri"),], id.vars=c("group", "intervention", "phase", "block", "phaseAssessmentDay"),
measure.vars = "ruminating", na.rm = TRUE)
#cacluate the average values per phaseBeepNum
meltChange_avg <- ddply(meltChange, .(group, intervention, phase, block, phaseAssessmentDay, variable), plyr::summarise,
n_values = length(group),
avgValue = mean(value),
sdValue = sd(value))
#plot the average values of sumPA and sumNA (peri) against the average of the baseline assessment periods (pre)
for(b in 1:2){
for(g in c("controls", "remitted")){
if(g=="controls"){
color = "green"
} else {
color = "red"
}
for(intervention in c('mindfulness', 'fantasizing')){
meanVal <- mean(data[which((data$phase=="pre") & (data$block==b) & (data$group==g) &
(data$intervention==intervention)),]$ruminating, na.rm=TRUE)
lab_y <- "Avg change in rumination"
main <- "Change in Rumination per Assessment Day"
subtitle <- paste("(", g, ",", intervention, ",", "peri-intervention, block", b, ")")
px <- ggplot(data = meltChange_avg[which((meltChange_avg$group==g) &
(meltChange_avg$block==b) &
(meltChange_avg$intervention==intervention)),],
aes(x=phaseAssessmentDay, y=avgValue-meanVal)) +
geom_line(color = color) + geom_point() + scale_fill_manual(values=color) +
labs(title=main, subtitle=subtitle) + xlab('Phase Assessment Day') + ylab(lab_y) +
geom_errorbar(aes(ymin=avgValue-sdValue-meanVal, ymax=avgValue+sdValue-meanVal), width=.2,
position=position_dodge(.9))
print(px)
}
}
}

conNet <- getmatrix(conMod, matrix = "beta")
qgraph(conNet,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
conNetc <- getmatrix(conMod, matrix = "exo_cholesky")
conNetb <- getmatrix(conMod, matrix = "beta")
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
conMod_ts <- tsdlvm1(conBase,
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod_ts <- conMod_ts %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
conNetTS_c <- getmatrix(conMod_ts, matrix = "exo_cholesky")
conNetTS_b <- getmatrix(conMod_ts, matrix = "beta")
par(mfrow = c(1,2))
qgraph(conNetb,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
qgraph(conNetb,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.3, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
qgraph(conNetb,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline")
qgraph(conNetb,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - BETA")
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetb,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - BETA")
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetTS_b,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - BETA")
View(conMod_ts)
qgraph(conNetTS_c,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
View(conMod)
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetc,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetTS_c,  theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
dev.off()
L <- averageLayout(conNetc, conNetTS_c)
# pdf(paste0(figs, "figure.pdf"), width=6, height=2.5)
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
L <- averageLayout(conNetc, conNetTS_c)
# pdf(paste0(figs, "figure.pdf"), width=6, height=2.5)
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
qgraph(conNetc, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetTS_c, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetc, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
qgraph(conNetTS_c, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.6, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Exo_Cholesky")
View(conNetc)
View(conNetTS_c)
compare(var1_model = conMod, tsdlvm1_model = conMod_ts)
?estimateNetwork
bootNet1 <- estimateNetwork(conBase, default = "SVAR_lavaan", verbose = FALSE)
bootNet1 <- estimateNetwork(conBase, vars = nodeVars,
default = "SVAR_lavaan", verbose = FALSE)
?gvar
conMod_g <- gvar(conBase,
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
bootNet1
plot(bootnet1, graph = "temporal")
plot(bootNet1, graph = "temporal")
plot(bootNet1, graph = "contemporaneous")
compare(var1_model = conMod, tsdlvm1_model = conMod_ts, bootNet = bootNet1)
View(conMod)
View(conMod_ts)
conNet_temp <- getmatrix(conMod, matrix = "beta")
conNet_cont <- getmatrix(conMod, matrix = "omega_zeta")
L <- averageLayout(conNet_temp, conNet_cont)
# pdf(paste0(figs, "figure.pdf"), width=6, height=2.5)
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
qgraph(conNet_temp, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(conNet_cont, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.6, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Contemporaneous")
TL <- averageLayout(conNet_temp, bootNet1$graph$temporal)
plot(bootNet1, graph = "temporal", nodeNames = diffVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = tL)
plot(bootNet1, graph = "temporal", nodeNames = diffVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = TL)
plot(bootNet1, graph = "temporal", nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = TL)
dev.off()
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
qgraph(conNet_temp, layout = TL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
plot(bootNet1, graph = "temporal", nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = TL)
CL <- averageLayout(conNet_temp, bootNet1$graph$contemporaneous)
CL <- averageLayout(conNet_temp, bootNet1$graph$contemporaneous)
plot(bootNet1, graph = "contemporaneous", nodeNames = nodeVars,
groups = groups_list,
labels = c(1:13),
layout = CL)
CL <- averageLayout(conNet_temp, bootNet1$graph$contemporaneous)
CL <- averageLayout(conNet_temp, bootNet1$graph$contemporaneous)
qgraph(conNet_cont, layout = CL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.6, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Contemporaneous")
plot(bootNet1, graph = "contemporaneous", nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = CL)
test <- 1*(bootNet1$graph$contemporaneous != 0)
model_frombootnet <- ggm(conBase, vars = nodeVars, omega = test) %>%
runmodel
model_frombootnet
compare(model_frombootnet, conNet_cont)
model_frombootnet <- psychonetrics::ggm(conBase, vars = nodeVars, omega = test) %>%
runmodel
compare(model_frombootnet, conNet_cont)
class(model_frombootnet)
compare(model_frombootnet, conMod)
compare(var1_model = conMod, tsdlvm1_model = conMod_ts, gvar_model = conMod_g)
conMod_g <- gvar(conBase,
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod_g <- gvar(conBase,
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
estimator = "FIML",
storedata = TRUE)
conMod_g <- conMod_g %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
compare(var1_model = conMod, tsdlvm1_model = conMod_ts, gvar_model = conMod_g)
?gvar
View(conMod)
View(conMod_g)
compare(model_frombootnet, conMod)
model_frombootnet <- psychonetrics::var1(conBase, vars = nodeVars, omega = test) %>%
runmodel
compare(model_frombootnet, conMod)
test <- 1*(bootNet1$graph$temporal != 0)
model_frombootnet <- psychonetrics::var1(conBase, vars = nodeVars, omega = test) %>%
runmodel
compare(model_frombootnet, conMod)
dev.off)()
dev.off()
plot(bootNet1, graph = "temporal", nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.6,
labels = c(1:13),
layout = TL)
remBoot <- estimateNetwork(remBase, vars = nodeVars,
default = "SVAR_lavaan", verbose = FALSE,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",)
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "SVAR_lavaan",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
TL <- averageLayout(remBoot$graph$temporal, conBoot$graph$temporal)
plot(conBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = TL)
plot(remBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = TL)
CL <- averageLayout(remBoot$graph$contemporaneous, conBoot$graph$contemporaneous)
plot(conBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = CL)
plot(remBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = CL)
?estimateNetwork
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "GGMncv",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
install.packages("GGMncv")
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "GGMncv",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
remBoot <- estimateNetwork(remBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
TL <- averageLayout(remBoot$graph$temporal, conBoot$graph$temporal)
plot(conBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = TL)
plot(remBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = TL)
CL <- averageLayout(remBoot$graph$contemporaneous, conBoot$graph$contemporaneous)
plot(conBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = CL)
plot(remBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = CL)
#subData <- sc_data[which((sc_data$group==g) & (sc_data$phase=="pre")),]
conBase <- data_t[which((data_t$group=="controls") & (data_t$phase=="pre") & (data_t$block==1)),] #non-paranormalized data
remBase <- data_t[which((data_t$group=="remitted") & (data_t$phase=="pre") & (data_t$block==1)),] #non-paranormalized data
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
remBoot <- estimateNetwork(remBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
TL <- averageLayout(remBoot$graph$temporal, conBoot$graph$temporal)
plot(conBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = TL)
plot(remBoot, graph = "temporal",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = TL)
CL <- averageLayout(remBoot$graph$contemporaneous, conBoot$graph$contemporaneous)
plot(conBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:13),
layout = CL)
plot(remBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:13),
layout = CL)
nodeVars <- c('ruminating',# 'stickiness',
'energetic', 'wakeful', 'satisfied',
'down', 'irritated', 'anxious', 'restless',
'posIntensity', 'negIntensity',
'listless', 'distracted')
data_copy <- data.table::copy(data)
data_copy <- data_copy[which(is.na(data_copy$mindcog_db_non_response)),]
data_copy <- data_copy[complete.cases(data_copy[nodeVars]),]
sc_data <- copy(data_copy)
sc_data[nodeVars] <- scale(data_copy[nodeVars])
#paranormal transformation (because the model assumes normality) --> recommended by Epskamp
#huge.npn() should only be applied to data without missing values! Otherwise creates weird values!!!
data_t <- copy(data_copy)
data_t[,nodeVars] <- huge.npn(data_t[,nodeVars])
groups_list <- list(Rumination = c(1), PositiveAffect = c(2,3,4), NegativeAffect = c(5,6,7,8), MoodReactivity = c(9,10),
OtherNegative = c(11,12))#, Sleep = c(11))
Lambda = matrix(1, length(nodeVars),1)
#subData <- sc_data[which((sc_data$group==g) & (sc_data$phase=="pre")),]
conBase <- data_t[which((data_t$group=="controls") & (data_t$phase=="pre") & (data_t$block==1)),] #non-paranormalized data
remBase <- data_t[which((data_t$group=="remitted") & (data_t$phase=="pre") & (data_t$block==1)),] #non-paranormalized data
conBoot <- estimateNetwork(conBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
remBoot <- estimateNetwork(remBase, vars = nodeVars,
default = "graphicalVAR",
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum")
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
TL <- averageLayout(remBoot$graph$temporal, conBoot$graph$temporal)
plot(conBoot, graph = "temporal",
title = "Controls - Baseline",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:12),
layout = TL)
plot(remBoot, graph = "temporal",
title = "Remitted - Baseline",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:12),
layout = TL)
CL <- averageLayout(remBoot$graph$contemporaneous, conBoot$graph$contemporaneous)
plot(conBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend = FALSE,
labels = c(1:12),
layout = CL)
plot(remBoot, graph = "contemporaneous",
nodeNames = nodeVars,
groups = groups_list,
legend.cex = 0.5,
labels = c(1:12),
layout = CL)
conMod <- var1(conBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod <- conMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
conMod_ts <- tsdlvm1(conBase,
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod_ts <- conMod_ts %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
compare(var1_model = conMod, tsdlvm1_model = conMod_ts)
View(conMod_ts)
conNet_temp <- getmatrix(conMod, matrix = "beta")
conNet_cont <- getmatrix(conMod, matrix = "omega_zeta")
par(mfrow = c(1,2))
L <- averageLayout(conNet_temp, conNet_cont)
# pdf(paste0(figs, "figure.pdf"), width=6, height=2.5)
layout(matrix(c(1,1,2,2,2), nc=5, byrow = TRUE)) # 40% vs 60% widths
qgraph(conNet_temp, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(conNet_cont, layout = L, theme = "colorblind", cut = 0, layout = "spring",
groups=groups_list, legend=TRUE, legend.cex = 0.6, nodeNames = nodeVars, labels=c(1:13),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Contemporaneous")
conMod <- var1(remBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
remMod <- remMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
conMod <- var1(conBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
remMod <- var1(remBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod <- conMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
remMod <- remMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
remNet_temp <- getmatrix(remMod, matrix = "beta")
remNet_cont <- getmatrix(remMod, matrix = "omega_zeta")
TL <- averageLayout(conNet_temp, remNet_temp)
qgraph(conNet_temp, layout = TL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(remNet_temp, layout = TL, theme = "colorblind", cut = 0,
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Remitted - Baseline - Temporal")
CL <- averageLayout(conNet_cont, remNet_cont)
qgraph(conNet_cont, layout = CL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(remNet_cont, layout = CL, theme = "colorblind", cut = 0,
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Remitted - Baseline - Temporal")
#subData <- sc_data[which((sc_data$group==g) & (sc_data$phase=="pre")),]
conBase <- data_t[which((data_t$group=="controls") & (data_t$phase=="pre")),] #non-paranormalized data  & (data_t$block==1)
remBase <- data_t[which((data_t$group=="remitted") & (data_t$phase=="pre")),] #non-paranormalized data
conMod <- var1(conBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
remMod <- var1(remBase, #Note: var1() and gvar() are identical for our purpose
vars = nodeVars,
idvar = "subjB",
dayvar = "blockAssessmentDay",
beepvar = "dayBeepNum",
# lambda = Lambda,
estimator = "FIML",
storedata = TRUE)
conMod <- conMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
remMod <- remMod %>% runmodel %>% prune(alpha = 0.01) %>% modelsearch
conNet_temp <- getmatrix(conMod, matrix = "beta")
conNet_cont <- getmatrix(conMod, matrix = "omega_zeta")
remNet_temp <- getmatrix(remMod, matrix = "beta")
remNet_cont <- getmatrix(remMod, matrix = "omega_zeta")
TL <- averageLayout(conNet_temp, remNet_temp)
qgraph(conNet_temp, layout = TL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(remNet_temp, layout = TL, theme = "colorblind", cut = 0,
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Remitted - Baseline - Temporal")
CL <- averageLayout(conNet_cont, remNet_cont)
qgraph(conNet_cont, layout = CL, theme = "colorblind", cut = 0,
groups=groups_list, legend=FALSE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Controls - Baseline - Temporal")
qgraph(remNet_cont, layout = CL, theme = "colorblind", cut = 0,
groups=groups_list, legend=TRUE, legend.cex = 0.4, nodeNames = nodeVars, labels=c(1:12),
vsize=6, repulsion=1.1, esize=3, title = "Remitted - Baseline - Temporal")
centralityPlot(conMod)
centralityPlot(conNet)
class(conNet)
corStability(conNet)
corStability(conMod)
corStability(conNet_temp)
centralityPlot(conNet_temp)
centralityPlot(conNet_cont)
?centralityPlot
centralityPlot(conNet_cont, include = c("Strength", "Degree"))

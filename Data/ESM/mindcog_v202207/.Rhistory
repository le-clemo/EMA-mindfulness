data_copy <- data_copy[which(is.na(data_copy$mindcog_db_non_response)),]
sc_data <- data_copy[complete.cases(data_copy[nodeVars]),]
data_t <- copy(sc_data)
data_t[,nodeVars] <- huge.npn(data_t[,nodeVars])
#grouping the variables --> for later use in network plotting
groups_list <- list(Rumination = c(1,2), PositiveAffect = c(3,4,5), NegativeAffect = c(6,7,8,9),
OtherNegative = c(10,11),
Events = c(12,13))#,)#, Sleep = c(11)) ,
# Sleep=c(15))
groups_colors <- c("#d60000", "#149F36", "#53B0CF", "#f66a6a", "#72CF53")#, "#0558ff")
colnames(data_t)[colnames(data_t) == 'sumNA'] <- 'NegativeAffect'
colnames(data_t)[colnames(data_t) == 'sumPA'] <- 'PositiveAffect'
colnames(data_t)[colnames(data_t) == 'negMax'] <- 'EventUnpleasantness'
colnames(data_t)[colnames(data_t) == 'posMax'] <- 'EventPleasantness'
colnames(data_t)[colnames(data_t) == 'ruminating'] <- 'Rumination'
colnames(data_t)[colnames(data_t) == 'energetic'] <- 'Energy'
colnames(data_t)[colnames(data_t) == 'wakeful'] <- 'Wakefulness'
colnames(data_t)[colnames(data_t) == 'satisfied'] <- 'Satisfaction'
colnames(data_t)[colnames(data_t) == 'down'] <- 'Sadness'
colnames(data_t)[colnames(data_t) == 'anxious'] <- 'Anxiety'
colnames(data_t)[colnames(data_t) == 'restless'] <- 'Restlessness'
colnames(data_t)[colnames(data_t) == 'irritated'] <- 'Irritation'
colnames(data_t)[colnames(data_t) == 'distracted'] <- 'Distraction'
groups_list <- list(Rumination = c(1), PositiveAffect = c(2,3,4), NegativeAffect = c(5,6,7,8),
Events = c(9,10),
Other = c(11))#,)#, Sleep = c(11)) ,
groups_colors <- c("yellow", "#149F36", "#d60000", "#37A7F8" , "#C662F0")
nodeVars <- c('Rumination',
'Energy', 'Wakefulness', 'Satisfaction',
'Sadness', 'Irritation', 'Anxiety', 'Restlessness',
'EventUnpleasantness', 'EventPleasantness',
'Distraction')#, 'NegativeAffect', 'PositiveAffect')
cont.nets <- list(rep(NA,2))
temp.nets <- list(rep(NA,2))
bet.nets <- list(rep(NA,2))
i = 1
#creating baseline networks per group
for(g in c("controls", "remitted")){
# Estimate network using multilevel VAR model
print('++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')
print(g)
print('++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')
#subData <- data_copy[which((data_copy$group==g) & (data_copy$phase=="pre")),]
#subData <- sc_data[which((sc_data$group==g) & (sc_data$phase=="pre")),]
subData <- data_t[which((data_t$group==g) & (data_t$phase=="pre")),]
subData$subjB <- factor(subData$subjB)
length(unique(subData$subjB))
mlNet <- mlVAR(subData,
vars=nodeVars,
estimator="lmer",
idvar="subjB",
dayvar="phaseAssessmentDay",
beepvar="dayBeepNum",
lags = 1,
temporal = "orthogonal",
contemporaneous = "orthogonal",
nCores = detectCores()-2)
#  # Get mlVAR networks:
cont.nets[[i]] <- getNet(mlNet, "contemporaneous", layout = "spring", nonsig = "hide", rule = "and")
bet.nets[[i]]  <- getNet(mlNet, "between", nonsig = "hide", rule = "and")
temp.nets[[i]] <- getNet(mlNet, "temporal", nonsig = "hide")
i <- i + 1
}
L <- averageLayout(cont.nets[[1]], cont.nets[[2]], temp.nets[[1]], temp.nets[[2]])
pdf(width=12, height=4,
file = "baseline_contemp_nets.pdf")
layout(matrix(c(1,1,1,1,1,2,2,2,2,2,2), nc=11, byrow = TRUE)) # 40% vs 60% widths
n1 <- qgraph(cont.nets[[2]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=F, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
n2 <- qgraph(cont.nets[[1]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Remitted: Temporal - Baseline")
groups=groups_list, legend.cex=.7, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
dev.off()
n1 <- qgraph(cont.nets[[2]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=F, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
n2 <- qgraph(cont.nets[[1]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Remitted: Temporal - Baseline")
groups=groups_list, legend.cex=.7, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
layout(matrix(c(1,1,1,1,1,2,2,2,2,2,2), nc=11, byrow = TRUE)) # 40% vs 60% widths
n1 <- qgraph(cont.nets[[2]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=F, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
n2 <- qgraph(cont.nets[[1]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Remitted: Temporal - Baseline")
groups=groups_list, legend.cex=.7, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=8, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
layout(matrix(c(1,1,1,1,1,2,2,2,2,2,2), nc=11, byrow = TRUE)) # 40% vs 60% widths
n3 <- qgraph(temp.nets[[2]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=F, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=6.5, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
n4 <- qgraph(temp.nets[[1]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Remitted: Temporal - Baseline")
groups=groups_list, legend.cex=.7, legend=TRUE, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=6.5, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
temp.nets[[2]]
temp.nets[[1]]
load("network_permutations/cont_pre_final.rda")
cont_pre_final <- copy(permutationResults)
netAll <- cont_pre_final
sum((netAll$p_values$Contemporaneous$EdgeWeights < 0.025), na.rm = T)
sum((netAll$p_values$Contemporaneous$EdgeWeights != 1), na.rm = T)
net <- cont_pre_final[["network"]][["Temporal"]][["EdgeWeights"]]
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=.5, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net_pvals <- netAll[["p_values"]][["Contemporaneous"]][["EdgeWeights"]]
# net <- copy(netAll)
net[which(net_pvals > 0.025)] <- 0
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
View(cont_pre_final)
cont_pre_final[["network"]][["Temporal"]][["EdgeWeights"]]
View(cont_pre_final[["p_values"]][["Temporal"]][["EdgeWeights"]])
View(rem_pre_final)
rem_pre_final[["network"]][["Temporal"]][["EdgeWeights"]]
View(compare_group_pre_final)
compare_group_pre_final[["testStats"]][["difference"]][["EdgeWeights"]][["Temporal"]][[1]]
View(compare_group_pre_final[["p_values"]][["Temporal"]][["EdgeWeights"]])
layout(matrix(c(1,1,1,1,1,2,2,2,2,2,2), nc=11, byrow = TRUE)) # 40% vs 60% widths
n3 <- qgraph(temp.nets[[2]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=F, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=6.5, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
n4 <- qgraph(temp.nets[[1]], layout = L, theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Remitted: Temporal - Baseline")
groups=groups_list, legend.cex=.7, legend=TRUE, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6.5, asize=6.5, curve=0.5, esize=3, color = groups_colors, label.cex = 2)
netAll <- compare_group_pre_final
sum((netAll$p_values$Contemporaneous$EdgeWeights < 0.025), na.rm = T)
sum((netAll$p_values$Contemporaneous$EdgeWeights != 1), na.rm = T)
sum((netAll$p_values$Temporal$EdgeWeights < 0.025), na.rm = T)
sum((netAll$p_values$Temporal$EdgeWeights != 1), na.rm = T)
net <- cont_pre_final[["network"]][["Temporal"]][["EdgeWeights"]]
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=.5, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net_pvals <- netAll[["p_values"]][["Temporal"]][["EdgeWeights"]]
# net <- copy(netAll)
net[which(net_pvals > 0.025)] <- 0
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net
View(compare_group_pre_final)
View(compare_group_pre_final[["p_values"]][["Temporal"]][["EdgeWeights"]])
netAll <- compare_group_pre_final
sum((netAll$p_values$Temporal$EdgeWeights < 0.025), na.rm = T)
sum((netAll$p_values$Temporal$EdgeWeights != 1), na.rm = T)
net <- compare_group_pre_final[["network"]][["Temporal"]][["EdgeWeights"]]
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=.5, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net_pvals <- netAll[["testStats"]][["difference"]][["EdgeWeights"]][["Temporal"]][[1]] #[["p_values"]][["Temporal"]][["EdgeWeights"]]
# net <- copy(netAll)
net[which(net_pvals > 0.025)] <- 0
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net <- compare_group_pre_final[["testStats"]][["difference"]][["EdgeWeights"]][["Temporal"]][[1]] #[["network"]][["Temporal"]][["EdgeWeights"]]
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=.5, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
net_pvals <- netAll[["p_values"]][["Temporal"]][["EdgeWeights"]]
# net <- copy(netAll)
net[which(net_pvals > 0.025)] <- 0
n2 <- qgraph(net, layout = L, #title=paste("mlVAR: Contemporaneous network", g, i, "Baseline", sep = " - "),
theme='colorblind', negDashed=FALSE, diag=T, #title=paste("Controls: Temporal - Baseline")
groups=groups_list, legend.cex=1, legend=T, nodeNames = nodeVars, labels=c(1:length(nodeVars)),
vsize=6, asize=3, curve=0.5, esize=3, color = groups_colors)
compare_group_pre_final[["testStats"]][["difference"]][["EdgeWeights"]][["Temporal"]][[1]]
net_type <- "Contemporaneous"
net1 <- rem_pre_final[["network"]][[net_type]][["EdgeWeights"]]
pvals1 <- rem_pre_final[["p_values"]][[net_type]][["EdgeWeights"]]
net2 <- cont_pre_final[["network"]][[net_type]][["EdgeWeights"]]
pvals2 <- cont_pre_final[["p_values"]][[net_type]][["EdgeWeights"]]
netDiff <- compare_group_pre_final[["testStats"]][["difference"]][["EdgeWeights"]][[net_type]][[1]]
pvalsDiff <- compare_group_pre_final[["p_values"]][[net_type]][["EdgeWeights"]]
nets <- list(list(net1, pvals1), list(net2, pvals2), list(netDiff, pvalsDiff))
#if net_type == "Contemporaneous 66 else 121
mlength <- 66
m <- matrix(rep(NA,mlength), ncol = 1)
sign_m <- matrix(rep(NA,mlength), ncol = 1)
for(net in nets){
for(n in net){
rownames(n)[rownames(n) == 'sumNA'] <- 'NegativeAffect'
rownames(n)[rownames(n) == 'sumPA'] <- 'PositiveAffect'
rownames(n)[rownames(n) == 'negMax'] <- 'EventUnpleasantness'
rownames(n)[rownames(n) == 'posMax'] <- 'EventPleasantness'
rownames(n)[rownames(n) == 'ruminating'] <- 'Rumination'
rownames(n)[rownames(n) == 'energetic'] <- 'Energy'
rownames(n)[rownames(n) == 'wakeful'] <- 'Wakefulness'
rownames(n)[rownames(n) == 'satisfied'] <- 'Satisfaction'
rownames(n)[rownames(n) == 'down'] <- 'Sadness'
rownames(n)[rownames(n) == 'anxious'] <- 'Anxiety'
rownames(n)[rownames(n) == 'restless'] <- 'Restlessness'
rownames(n)[rownames(n) == 'irritated'] <- 'Irritation'
rownames(n)[rownames(n) == 'distracted'] <- 'Distraction'
}
net[[2]] <- as.matrix(net[[2]])
if(net_type == "Contemporaneous"){
e <- t(net[[1]])[lower.tri(t(net[[1]]), diag=TRUE)]
e <- matrix(round(e,2), ncol = 1)
p <- t(net[[2]])[lower.tri(t(net[[2]]), diag=TRUE)]
p <- matrix(round(p,3), ncol = 1)
#create significant only matrix
net[[1]][which(net[[2]]>0.025)] <- NA
net[[2]][which(net[[2]]>0.025)] <- NA
sign_e <- t(net[[1]])[lower.tri(t(net[[1]]), diag=TRUE)]
sign_e <- matrix(round(sign_e,2), ncol = 1)
sign_p <- t(net[[2]])[lower.tri(t(net[[2]]), diag=TRUE)]
sign_p <- matrix(round(sign_p,3), ncol = 1)
} else {
#create full matrix
e <- as.vector(t(net[[1]]))
e <- matrix(round(e,2), ncol = 1)
p <- as.vector(t(net[[2]]))
p <- matrix(round(p,3), ncol = 1)
#create significant only matrix
net[[1]][which(net[[2]]>0.025)] <- NA
net[[2]][which(net[[2]]>0.025)] <- NA
sign_e <- as.vector(t(net[[1]]))
sign_e <- matrix(round(sign_e, 2), ncol = 1)
sign_p <- as.vector(t(net[[2]]))
sign_p <- matrix(round(sign_p, 3), ncol = 1)
}
m <- cbind(m, e, p)
sign_m <- cbind(sign_m, sign_e, sign_p)
}
var_names <- rownames(n)
if(net_type=="Contemporaneous"){
rnames <- c()
loop_names <- var_names
j <- 1
for(n1 in loop_names){
for(n2 in loop_names){
rnames[j] <- paste(n1, n2, sep = " -- ")
j <- j + 1
}
loop_names <- loop_names[-1]
}
} else {
rnames <- paste(rep(var_names, each = length(var_names)), var_names, sep = " --> ")
}
rownames(m) <- rnames
rownames(sign_m) <- rnames
m <- m[,-1]
sign_m <- sign_m[,-1]
sign_m <- sign_m[rowSums(is.na(sign_m)) != ncol(sign_m), ]
colnames(m) <- c("C-EW", "C-PV", "R-EW", "R-PV", "Diff", "Diff-PV")
colnames(sign_m) <- c("C-EW", "C-PV", "R-EW", "R-PV", "Diff", "Diff-PV")
df <- data.frame(m)
df <- df[df$C.PV < 0.025 | df$R.PV < 0.025 | df$Diff.PV < 0.025,]
df <- df[complete.cases(df),]
Hmisc::latex(df, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
df
var_names
net1 <- rem_pre_final[["network"]][[net_type]][["Centrality"]]
pvals1 <- rem_pre_final[["p_values"]][[net_type]][["Centrality"]]
net2 <- cont_pre_final[["network"]][[net_type]][["Centrality"]]
pvals2 <- cont_pre_final[["p_values"]][[net_type]][["Centrality"]]
netDiff <- compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]]
pvalsDiff <- compare_group_pre_final[["p_values"]][[net_type]][["Centrality"]]
nets <- list(list(net1, pvals1), list(net2, pvals2), list(netDiff, pvalsDiff))
net1
cbind(net1, pvals1, net2, pvals2, netDiff, pvalsDiff)
View(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][["ruminating"]])
cbind(net1, pvals1, net2, pvals2, net1-net2, pvalsDiff)
net_type <- "Temporal"
net1 <- rem_pre_final[["network"]][[net_type]][["Centrality"]]
pvals1 <- rem_pre_final[["p_values"]][[net_type]][["Centrality"]]
net2 <- cont_pre_final[["network"]][[net_type]][["Centrality"]]
pvals2 <- cont_pre_final[["p_values"]][[net_type]][["Centrality"]]
netDiff <- compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]]
pvalsDiff <- compare_group_pre_final[["p_values"]][[net_type]][["Centrality"]]
nets <- list(list(net1, pvals1), list(net2, pvals2), list(netDiff, pvalsDiff))
cbind(net1, pvals1, net2, pvals2, net1-net2, pvalsDiff)
cbind(net1[,1:2], pvals1, net2, pvals2, net1-net2, pvalsDiff)
cbind(net1[,1:2], pvals1[,1:2], net2[,1:2], pvals2[,1:2], net1[,1:2]-net2[,1:2], pvalsDiff[,1:2])
net1 <- round(rem_pre_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(rem_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(cont_pre_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(cont_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_group_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
cbind(net1[,1:2], pvals1[,1:2], net2[,1:2], pvals2[,1:2], round(net1[,1:2]-net2[,1:2], 2), pvalsDiff[,1:2])
centDF <- cbind(net1[,1:2], pvals1[,1:2], net2[,1:2], pvals2[,1:2], round(net1[,1:2]-net2[,1:2], 2), pvalsDiff[,1:2])
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
colnames(centDF) <- c("R.InS", "R.OutS", "R.PV.InS", "R.PV.OutS", "C.InS", "C.OutS", "C.PV.InS", "C.PV.OutS", "Diff.InS", "Diff.OutS", "Diff.PV.InS", "Diff.PV.OutS")
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
rownames(centDF) <- var_names
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
rownames(centDF) <- var_names
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
centDF
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF["Restlessness",]
centDF[9,]
centDF[10,]
centDF[11,]
net1 <- round(all_pre_mind_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(all_pre_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(all_peri_mind_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(all_peri_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_all_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
rownames(centDF) <- var_names
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
centDF[1,]
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF[8,]
centDF[9,]
centDF[10,]
centDF[11,]
net1 <- round(all_pre_fant_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(all_pre_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(all_peri_fant_final[["network"]][[net_type]][["Centrality"]], 2)
net1 <- round(all_pre_fant_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(all_pre_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(all_peri_fant_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(all_peri_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_all_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
rownames(centDF) <- var_names
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
centDF[1,]
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF[8,]
centDF[9,]
centDF[10,]
centDF[11,]
net_type <- "Contemporaneous"
net1 <- round(all_pre_fant_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(all_pre_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(all_peri_fant_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(all_peri_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_all_fant_final[["p_values"]][[net_type]][["Centrality"]], 3)
net1
if(net_type=="Contemporaneous"){
centDF <- cbind(net1[,1], pvals1[,1],
net2[,1], pvals2[,1],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1])
colnames(centDF) <- c("R.Strength", "p", "C.Strength", "p", "Diff.Strength", "p")
} else {
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
}
rownames(centDF) <- var_names
centDF
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
centDF[1,]
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF[8,]
centDF[9,]
centDF[10,]
centDF[11,]
net_type <- "Contemporaneous"
net1 <- round(all_pre_mind_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(all_pre_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(all_peri_mind_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(all_peri_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_all_mind_final[["p_values"]][[net_type]][["Centrality"]], 3)
if(net_type=="Contemporaneous"){
centDF <- cbind(net1[,1], pvals1[,1],
net2[,1], pvals2[,1],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1])
colnames(centDF) <- c("R.Strength", "p", "C.Strength", "p", "Diff.Strength", "p")
} else {
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
}
rownames(centDF) <- var_names
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
cent[1,]
centDF[1,]
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF[8,]
centDF[9,]
centDF[10,]
centDF[11,]
net_type <- "Contemporaneous"
net1 <- round(rem_pre_final[["network"]][[net_type]][["Centrality"]], 2)
pvals1 <- round(rem_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
net2 <- round(cont_pre_final[["network"]][[net_type]][["Centrality"]], 2)
pvals2 <- round(cont_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
# netDiff <- round(compare_group_pre_final[["testStats"]][["difference"]][["Centrality"]][[net_type]][[1]], 2)
pvalsDiff <- round(compare_group_pre_final[["p_values"]][[net_type]][["Centrality"]], 3)
if(net_type=="Contemporaneous"){
centDF <- cbind(net1[,1], pvals1[,1],
net2[,1], pvals2[,1],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1])
colnames(centDF) <- c("R.Strength", "p", "C.Strength", "p", "Diff.Strength", "p")
} else {
centDF <- cbind(net1[,1], pvals1[,1],
net1[,2], pvals1[,2],
net2[,1], pvals2[,1],
net2[,2], pvals2[,2],
round(net1[,1]-net2[,1], 2), pvalsDiff[,1],
round(net1[,2]-net2[,2], 2), pvalsDiff[,2])
colnames(centDF) <- c("R.InS", "p", "R.Out", "p", "C.InS", "p", "C.OutS", "p", "Diff.InS", "p", "Diff.OutS", "p")
}
rownames(centDF) <- var_names
Hmisc::latex(centDF, cdec=c(0,2,2,2,4), na.blank=TRUE,
booktabs=TRUE, table.env=TRUE, center="none", file="", title="")
centDF
centDF[1,]
centDF[2,]
centDF[3,]
centDF[4,]
centDF[5,]
centDF[6,]
centDF[7,]
centDF[8,]
centDF[9,]
centDF[10,]
centDF[11,]
View(cont_pre_final)
View(cont_pre_final[["p_values"]][["Temporal"]][["Centrality"]])
View(all_peri_mind_final)
View(all_peri_mind_final[["p_values"]][["Contemporaneous"]][["Centrality"]])
View(all_pre_mind_final)
View(all_pre_mind_final[["p_values"]][["Contemporaneous"]][["Centrality"]])
netAll <- all_pre_fant_final
sum((netAll$p_values$Temporal$EdgeWeights < 0.025), na.rm = T)
sum((netAll$p_values$Temporal$EdgeWeights != 1), na.rm = T)
View(all_pre_fant_final)
View(all_pre_fant_final[["p_values"]][["Temporal"]][["EdgeWeights"]])
length(unique(cont_pre_final$data$subjB)) #38
length(unique(rem_pre_final$data$subjB)) #21
length(unique(all_pre_fant_final$data$subjB)) #32
length(unique(all_peri_fant_final$data$subjB)) #31
length(unique(all_pre_mind_final$data$subjB)) #27
length(unique(all_peri_mind_final$data$subjB)) #27

db16_listless_avg = mean(listless, na.rm = TRUE),
db18_worrying_avg = mean(worried, na.rm = TRUE),
db19_stickiness_avg = mean(stickiness, na.rm = TRUE),
db20_easeThoughts_avg = mean(thoughtsPleasant, na.rm = TRUE),
db24_distracted_avg = mean(distracted, na.rm = TRUE),
db25_restOfDayPos_avg = mean(restOfDayPos, na.rm = TRUE),
db27_companyPos_avg = mean(companyPleasant, na.rm = TRUE),
db28_solitudePos_avg = mean(alonePleasant, na.rm = TRUE),
db29_enjoyabilityMax_avg = mean(posMax, na.rm = TRUE),
db30_intensityPos_avg = mean(posIntensity, na.rm = TRUE),
db31_unpleasantMax_avg = mean(negMax, na.rm = TRUE),
db32_intensityNeg_avg = mean(negIntensity, na.rm = TRUE))
for(g in c("controls", "remitted")){
#boxplot comparisons
meltData3 <- melt(data[data$group == g, c("intervention", "phase", metricCols[1:9])])
meltData3 <- meltData3 %>% drop_na(intervention)
meltData3 <- meltData3 %>% drop_na(phase)
meltData3$interventionPhase <- sprintf("%s.%s", as.character(meltData3$intervention), meltData3$phase)
meltData3$interventionPhase <- factor(meltData3$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData3 <- meltData3 %>% drop_na(interventionPhase)
p1 <- ggplot(meltData3, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p1 <- p1 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p1)
meltData4 <- melt(data[data$group == g, c("intervention", "phase", metricCols[10:18])])
meltData4 <- meltData4 %>% drop_na(intervention)
meltData4 <- meltData4 %>% drop_na(phase)
meltData4$interventionPhase <- sprintf("%s.%s", as.character(meltData4$intervention), meltData4$phase)
meltData4$interventionPhase <- factor(meltData4$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData4 <- meltData4 %>% drop_na(interventionPhase)
#boxplot(data=meltData, value~variable)
p2 <- ggplot(meltData4, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p2 <- p2 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p2)
}
#################################### naive time series plots ####################################
#developments over time
time_avgs <- ddply(data, .(group, intervention, beepNum), plyr::summarize,
#n_Subj = length(unique(respondent_id)),
sleep_avg = mean(sleepQuality, na.rm = TRUE),
sleep_sd = sd(sleepQuality, na.rm = TRUE),
wakeful_avg = mean(wakeful, na.rm = TRUE),
sad_avg = mean(sad, na.rm = TRUE),
sad_sd = sd(sad, na.rm = TRUE),
satisfied_avg = mean(satisfied, na.rm = TRUE),
satisfied_sd = sd(satisfied, na.rm = TRUE),
irritated_avg = mean(irritated, na.rm = TRUE),
energetic_avg = mean(energetic, na.rm = TRUE),
restless_avg = mean(restless, na.rm = TRUE),
stressed_avg = mean(stressed, na.rm = TRUE),
anxious_avg = mean(anxious, na.rm = TRUE),
listless_avg = mean(listless, na.rm = TRUE),
worrying_avg = mean(worried, na.rm = TRUE),
stickiness_avg = mean(stickiness, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant, na.rm = TRUE),
distracted_avg = mean(distracted, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos, na.rm = TRUE),
companyPos_avg = mean(companyPleasant, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax, na.rm = TRUE),
intensityPos_avg = mean(posIntensity, na.rm = TRUE),
unpleasantMax_avg = mean(negMax, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity, na.rm = TRUE))
time_avgs$grInt <- paste(time_avgs$group, time_avgs$intervention, sep = "-")
time_avgs <- drop_na(time_avgs, intervention)
dependent_vars = c("sleep_avg", "wakeful_avg", "sad_avg", "satisfied_avg", "irritated_avg",
"energetic_avg", "restless_avg", "stressed_avg", "anxious_avg", "listless_avg",
"worrying_avg", "stickiness_avg", "easeThoughts_avg", "distracted_avg", "restOfDayPos_avg",
"companyPos_avg", "solitudePos_avg", "enjoyabilityMax_avg", "intensityPos_avg",
"unpleasantMax_avg", "intensityNeg_avg")
for(var in dependent_vars){
meltData <- melt(drop_na(time_avgs, grInt), id = c( "beepNum", "grInt"), measure.vars = var)
p1 <- ggplot(meltData, aes(beepNum, value, color = factor(grInt), group = variable)) +
geom_point() +
facet_grid("grInt") +
geom_smooth(method='lm', formula = "y ~ x") +
labs(y = var, x = "Assessment Number") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None")
print(p1)
}
#developments over time per phase
phase_avgs <- ddply(data, .(group, intervention, block, phase, blockBeepNum), plyr::summarize,
#n_Subj = length(unique(respondent_id)),
sleep_avg = mean(sleepQuality, na.rm = TRUE),
sleep_sd = sd(sleepQuality, na.rm = TRUE),
wakeful_avg = mean(wakeful, na.rm = TRUE),
sad_avg = mean(sad, na.rm = TRUE),
sad_sd = sd(sad, na.rm = TRUE),
satisfied_avg = mean(satisfied, na.rm = TRUE),
satisfied_sd = sd(satisfied, na.rm = TRUE),
irritated_avg = mean(irritated, na.rm = TRUE),
energetic_avg = mean(energetic, na.rm = TRUE),
restless_avg = mean(restless, na.rm = TRUE),
stressed_avg = mean(stressed, na.rm = TRUE),
anxious_avg = mean(anxious, na.rm = TRUE),
listless_avg = mean(listless, na.rm = TRUE),
worrying_avg = mean(worried, na.rm = TRUE),
stickiness_avg = mean(stickiness, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant, na.rm = TRUE),
distracted_avg = mean(distracted, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos, na.rm = TRUE),
companyPos_avg = mean(companyPleasant, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax, na.rm = TRUE),
intensityPos_avg = mean(posIntensity, na.rm = TRUE),
unpleasantMax_avg = mean(negMax, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity, na.rm = TRUE))
phase_avgs$grInt <- paste(phase_avgs$group, phase_avgs$intervention, sep = "-")
phase_avgs <- drop_na(phase_avgs, intervention)
phase_avgs <- drop_na(phase_avgs, phase)
dependent_vars = c("sleep_avg", "wakeful_avg", "sad_avg", "satisfied_avg", "irritated_avg",
"energetic_avg", "restless_avg", "stressed_avg", "anxious_avg", "listless_avg",
"worrying_avg", "stickiness_avg", "easeThoughts_avg", "distracted_avg",
"intensityPos_avg", "intensityNeg_avg")
for(var in dependent_vars){
meltData <- melt(drop_na(phase_avgs, grInt),
id = c("block", "phase", "blockBeepNum", "grInt"), measure.vars = var)
p1 <- ggplot(meltData, aes(blockBeepNum, value, color = factor(grInt), group = variable)) +
geom_point() +
facet_grid("grInt") +
geom_smooth(method='lm', formula = "y ~ x") +
labs(y = var, x = "Assessment Number") +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
#strip.background = element_rect(fill = "lightblue"),
legend.position="None") #+
#geom_vline(xintercept = max(phase_avgs[phase_avgs$phase == "pre1",]$phaseBeepNum)) +
#geom_vline(xintercept = max(phase_avgs[phase_avgs$phase == "pre2",]$phaseBeepNum))
print(p1)
}
#creating a correlation matrix with numeric data
corrMat <- as.matrix(data[, metricCols])
#calculate the correlations
res <- rcorr(corrMat, type = c("pearson"))
corrplot(res$r, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, main = "All participants")
#separately for remitted and controls
corrMatRm <- as.matrix(data[data$group == "remitted", metricCols])
corrMatCont <- as.matrix(data[data$group == "controls", metricCols])
#calculate the correlations
resRm <- rcorr(corrMatRm, type = c("pearson"))
resCont <- rcorr(corrMatCont, type = c("pearson"))
corrplot(resRm$r, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, main = "Remitted")
corrplot(resCont$r, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, main = "Controls")
par(mfrow = c(1,2))
corrplot(resRm$r, method = "number", order = 'alphabet', main = "Remitted")
corrplot(resCont$r, method = "number", order = 'alphabet', main = "Controls")
par(mfrow = c(1,1))
dependent_var <- "stickiness"
remittedIDs <-  unique(data[data$group == "remitted",]$respondent_id) #get a list of all unique IDs
set.seed(125)
remittedSample <- sample(remittedIDs, 3)
contIDs <-  unique(data[data$group == "controls",]$respondent_id) #get a list of all unique IDs
contSample <- sample(contIDs, 3)
randData1 <- data[data$respondent_id %in% remittedSample,]
randData2 <- data[data$respondent_id %in% contSample,]
meltData1 <- melt(randData1, id = c("respondent_id", "assessmentDay", "beepNum"), measure.vars = dependent_var)
meltData2 <- melt(randData2, id = c("respondent_id", "assessmentDay", "beepNum"), measure.vars = dependent_var)
#for x: use beepNum for time or another variable to see relationship
p1 <- ggplot(meltData1,aes(x=beepNum,y=value,colour=factor(respondent_id), group = variable)) +
geom_line() + geom_smooth(method='lm')
p2 <- ggplot(meltData2,aes(x=beepNum,y=value,colour=factor(respondent_id), group = variable)) +
geom_line() + geom_smooth(method='lm')
#to split one plot into a grid of multiple plots
p1 <- p1 + facet_grid(rows = vars(factor(respondent_id))) + xlab("Assessment Number") + ylab(dependent_var)
p2 <- p2 + facet_grid(rows = vars(factor(respondent_id))) + xlab("Assessment Number") + ylab(dependent_var)
p1 <- p1 + theme(legend.position="None")
p2 <- p2 + theme(legend.position="None") #+ geom_vline(xintercept = assessmentDay, linetype = "dashed", color = "red")
figure <- ggarrange(p1, p2,
labels = c("Remitted", "Controls"),
ncol = 2, nrow = 1)#, common.legend = TRUE)
figure
remittedSample <- sample(remittedIDs, 3)
source("~/Documents/RUG/Thesis/EMA-mindfulness/Data/descriptive.R", echo=TRUE)
pc_summary <- Reduce(function(x, y) merge(x, y, all=TRUE), list(pc_time, pc_val, pc_object, pc_thinkingOf))
View(pc_summary)
grp_avg_cs<- ddply(data, .(group), plyr::summarize,
n_Subj = length(unique(subject)),
sleep_avg = mean(sleepQuality_change, na.rm = TRUE),
sleep_sd = sd(sleepQuality_change, na.rm = TRUE),
wakeful_avg = mean(wakeful_change, na.rm = TRUE),
sad_avg = mean(sad_change, na.rm = TRUE),
sad_sd = sd(sad_change, na.rm = TRUE),
satisfied_avg = mean(satisfied_change, na.rm = TRUE),
satisfied_sd = sd(satisfied_change, na.rm = TRUE),
irritated_avg = mean(irritated_change, na.rm = TRUE),
energetic_avg = mean(energetic_change, na.rm = TRUE),
restless_avg = mean(restless_change, na.rm = TRUE),
stressed_avg = mean(stressed_change, na.rm = TRUE),
anxious_avg = mean(anxious_change, na.rm = TRUE),
listless_avg = mean(listless_change, na.rm = TRUE),
worrying_avg = mean(worried_change, na.rm = TRUE),
stickiness_avg = mean(stickiness_change, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant_change, na.rm = TRUE),
distracted_avg = mean(distracted_change, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos_change, na.rm = TRUE),
companyPos_avg = mean(companyPleasant_change, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant_change, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax_change, na.rm = TRUE),
intensityPos_avg = mean(posIntensity_change, na.rm = TRUE),
unpleasantMax_avg = mean(negMax_change, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity_change, na.rm = TRUE),
response_delay_avg = round(mean(response_delay_change, na.rm = TRUE), 2),
response_duration_avg = round(mean(response_duration_change, na.rm = TRUE), 2))
grp_avg_cs<- ddply(data, .(group), plyr::summarize,
n_Subj = length(unique(subject)),
# sleep_avg = mean(sleepQuality_change, na.rm = TRUE),
# sleep_sd = sd(sleepQuality_change, na.rm = TRUE),
wakeful_avg = mean(wakeful_change, na.rm = TRUE),
sad_avg = mean(sad_change, na.rm = TRUE),
sad_sd = sd(sad_change, na.rm = TRUE),
satisfied_avg = mean(satisfied_change, na.rm = TRUE),
satisfied_sd = sd(satisfied_change, na.rm = TRUE),
irritated_avg = mean(irritated_change, na.rm = TRUE),
energetic_avg = mean(energetic_change, na.rm = TRUE),
restless_avg = mean(restless_change, na.rm = TRUE),
stressed_avg = mean(stressed_change, na.rm = TRUE),
anxious_avg = mean(anxious_change, na.rm = TRUE),
listless_avg = mean(listless_change, na.rm = TRUE),
worrying_avg = mean(worried_change, na.rm = TRUE),
stickiness_avg = mean(stickiness_change, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant_change, na.rm = TRUE),
distracted_avg = mean(distracted_change, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos_change, na.rm = TRUE),
companyPos_avg = mean(companyPleasant_change, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant_change, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax_change, na.rm = TRUE),
intensityPos_avg = mean(posIntensity_change, na.rm = TRUE),
unpleasantMax_avg = mean(negMax_change, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity_change, na.rm = TRUE),
response_delay_avg = round(mean(response_delay_change, na.rm = TRUE), 2),
response_duration_avg = round(mean(response_duration_change, na.rm = TRUE), 2))
grp_avg_cs<- ddply(data, .(group), plyr::summarize,
n_Subj = length(unique(subject)),
# sleep_avg = mean(sleepQuality_change, na.rm = TRUE),
# sleep_sd = sd(sleepQuality_change, na.rm = TRUE),
wakeful_avg = mean(wakeful_change, na.rm = TRUE),
sad_avg = mean(sad_change, na.rm = TRUE),
sad_sd = sd(sad_change, na.rm = TRUE),
satisfied_avg = mean(satisfied_change, na.rm = TRUE),
satisfied_sd = sd(satisfied_change, na.rm = TRUE),
irritated_avg = mean(irritated_change, na.rm = TRUE),
energetic_avg = mean(energetic_change, na.rm = TRUE),
restless_avg = mean(restless_change, na.rm = TRUE),
stressed_avg = mean(stressed_change, na.rm = TRUE),
anxious_avg = mean(anxious_change, na.rm = TRUE),
listless_avg = mean(listless_change, na.rm = TRUE),
worrying_avg = mean(worried_change, na.rm = TRUE),
stickiness_avg = mean(stickiness_change, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant_change, na.rm = TRUE),
distracted_avg = mean(distracted_change, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos_change, na.rm = TRUE),
companyPos_avg = mean(companyPleasant_change, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant_change, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax_change, na.rm = TRUE),
intensityPos_avg = mean(posIntensity_change, na.rm = TRUE),
unpleasantMax_avg = mean(negMax_change, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity_change, na.rm = TRUE))
View(grp_avg_cs)
#per group, intervention, and phase
phase_avg_cs<- ddply(data, .(group, intervention, phase), plyr::summarize,
n_Subj = length(unique(subject)),
# sleep_avg = mean(sleepQuality_change, na.rm = TRUE),
# sleep_sd = sd(sleepQuality_change, na.rm = TRUE),
wakeful_avg = mean(wakeful_change, na.rm = TRUE),
sad_avg = mean(sad_change, na.rm = TRUE),
sad_sd = sd(sad_change, na.rm = TRUE),
satisfied_avg = mean(satisfied_change, na.rm = TRUE),
satisfied_sd = sd(satisfied_change, na.rm = TRUE),
irritated_avg = mean(irritated_change, na.rm = TRUE),
energetic_avg = mean(energetic_change, na.rm = TRUE),
restless_avg = mean(restless_change, na.rm = TRUE),
stressed_avg = mean(stressed_change, na.rm = TRUE),
anxious_avg = mean(anxious_change, na.rm = TRUE),
listless_avg = mean(listless_change, na.rm = TRUE),
worrying_avg = mean(worried_change, na.rm = TRUE),
stickiness_avg = mean(stickiness_change, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant_change, na.rm = TRUE),
distracted_avg = mean(distracted_change, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos_change, na.rm = TRUE),
companyPos_avg = mean(companyPleasant_change, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant_change, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax_change, na.rm = TRUE),
intensityPos_avg = mean(posIntensity_change, na.rm = TRUE),
unpleasantMax_avg = mean(negMax_change, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity_change, na.rm = TRUE))
View(int_avgs)
View(phase_avg_cs)
for(g in c("controls", "remitted")){
#boxplot comparisons
meltData3 <- melt(data[data$group == g, c("intervention", "phase", changeCols[1:9])])
meltData3 <- meltData3 %>% drop_na(intervention)
meltData3 <- meltData3 %>% drop_na(phase)
meltData3$interventionPhase <- sprintf("%s.%s", as.character(meltData3$intervention), meltData3$phase)
meltData3$interventionPhase <- factor(meltData3$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData3 <- meltData3 %>% drop_na(interventionPhase)
p1 <- ggplot(meltData3, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p1 <- p1 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p1)
meltData4 <- melt(data[data$group == g, c("intervention", "phase", changeCols[10:18])])
meltData4 <- meltData4 %>% drop_na(intervention)
meltData4 <- meltData4 %>% drop_na(phase)
meltData4$interventionPhase <- sprintf("%s.%s", as.character(meltData4$intervention), meltData4$phase)
meltData4$interventionPhase <- factor(meltData4$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData4 <- meltData4 %>% drop_na(interventionPhase)
#boxplot(data=meltData, value~variable)
p2 <- ggplot(meltData4, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p2 <- p2 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p2)
}
changeCols <- c()
for(col in cols) {
changeCols <- c(changeCols, paste(col, "change", sep = "_"))
}
################################### Change scores ######################################
cols <- c('wakeful', 'sad', 'satisfied', 'irritated', 'energetic', 'restless', 'stressed', 'anxious',
'listless', 'thinkingOf', 'worried', 'stickiness', 'thoughtsPleasant', 'thoughtsTime',
'thoughtsValence', 'thoughtsObject', 'distracted', 'restOfDayPos', 'aloneCompany',
'companyPleasant', 'alonePleasant', 'posMax', 'posIntensity', 'negMax', 'negIntensity')
changeCols <- c()
for(col in cols) {
changeCols <- c(changeCols, paste(col, "change", sep = "_"))
}
for(g in c("controls", "remitted")){
#boxplot comparisons
meltData3 <- melt(data[data$group == g, c("intervention", "phase", changeCols[1:9])])
meltData3 <- meltData3 %>% drop_na(intervention)
meltData3 <- meltData3 %>% drop_na(phase)
meltData3$interventionPhase <- sprintf("%s.%s", as.character(meltData3$intervention), meltData3$phase)
meltData3$interventionPhase <- factor(meltData3$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData3 <- meltData3 %>% drop_na(interventionPhase)
p1 <- ggplot(meltData3, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p1 <- p1 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p1)
meltData4 <- melt(data[data$group == g, c("intervention", "phase", changeCols[10:18])])
meltData4 <- meltData4 %>% drop_na(intervention)
meltData4 <- meltData4 %>% drop_na(phase)
meltData4$interventionPhase <- sprintf("%s.%s", as.character(meltData4$intervention), meltData4$phase)
meltData4$interventionPhase <- factor(meltData4$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData4 <- meltData4 %>% drop_na(interventionPhase)
#boxplot(data=meltData, value~variable)
p2 <- ggplot(meltData4, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p2 <- p2 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p2)
}
changeCols
changeCols <- c()
for(col in metricCols) {
changeCols <- c(changeCols, paste(col, "change", sep = "_"))
}
grp_avg_cs<- ddply(data, .(group), plyr::summarize,
n_Subj = length(unique(subject)),
# sleep_avg = mean(sleepQuality_change, na.rm = TRUE),
# sleep_sd = sd(sleepQuality_change, na.rm = TRUE),
wakeful_avg = mean(wakeful_change, na.rm = TRUE),
sad_avg = mean(sad_change, na.rm = TRUE),
sad_sd = sd(sad_change, na.rm = TRUE),
satisfied_avg = mean(satisfied_change, na.rm = TRUE),
satisfied_sd = sd(satisfied_change, na.rm = TRUE),
irritated_avg = mean(irritated_change, na.rm = TRUE),
energetic_avg = mean(energetic_change, na.rm = TRUE),
restless_avg = mean(restless_change, na.rm = TRUE),
stressed_avg = mean(stressed_change, na.rm = TRUE),
anxious_avg = mean(anxious_change, na.rm = TRUE),
listless_avg = mean(listless_change, na.rm = TRUE),
worrying_avg = mean(worried_change, na.rm = TRUE),
stickiness_avg = mean(stickiness_change, na.rm = TRUE),
easeThoughts_avg = mean(thoughtsPleasant_change, na.rm = TRUE),
distracted_avg = mean(distracted_change, na.rm = TRUE),
restOfDayPos_avg = mean(restOfDayPos_change, na.rm = TRUE),
companyPos_avg = mean(companyPleasant_change, na.rm = TRUE),
solitudePos_avg = mean(alonePleasant_change, na.rm = TRUE),
enjoyabilityMax_avg = mean(posMax_change, na.rm = TRUE),
intensityPos_avg = mean(posIntensity_change, na.rm = TRUE),
unpleasantMax_avg = mean(negMax_change, na.rm = TRUE),
intensityNeg_avg = mean(negIntensity_change, na.rm = TRUE))
for(g in c("controls", "remitted")){
#boxplot comparisons
meltData3 <- melt(data[data$group == g, c("intervention", "phase", changeCols[1:9])])
meltData3 <- meltData3 %>% drop_na(intervention)
meltData3 <- meltData3 %>% drop_na(phase)
meltData3$interventionPhase <- sprintf("%s.%s", as.character(meltData3$intervention), meltData3$phase)
meltData3$interventionPhase <- factor(meltData3$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData3 <- meltData3 %>% drop_na(interventionPhase)
p1 <- ggplot(meltData3, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p1 <- p1 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p1)
meltData4 <- melt(data[data$group == g, c("intervention", "phase", changeCols[10:18])])
meltData4 <- meltData4 %>% drop_na(intervention)
meltData4 <- meltData4 %>% drop_na(phase)
meltData4$interventionPhase <- sprintf("%s.%s", as.character(meltData4$intervention), meltData4$phase)
meltData4$interventionPhase <- factor(meltData4$interventionPhase,
levels = c("fantasizing.pre", "fantasizing.peri", "mindfulness.pre",
"mindfulness.peri"))
meltData4 <- meltData4 %>% drop_na(interventionPhase)
#boxplot(data=meltData, value~variable)
p2 <- ggplot(meltData4, aes(factor(variable), value, fill = interventionPhase)) #interaction = intervention))
p2 <- p2 + geom_boxplot() + facet_wrap(~variable, scale="free") +
ggtitle(g)
print(p2)
}
### Load the packages we will need
library(here)
library(lme4)
library(brms)
### Load the psychometrics dataset
psychometrics <- read.csv(here('psychometrics.csv'))
install.packages("here")
install.packages("brms")
### Load the psychometrics dataset
psychometrics <- read.csv(here('psychometrics.csv'))
### Load the psychometrics dataset
psychometrics <- read.csv(here('psychometrics.csv'))
### Load the psychometrics dataset
psychometrics <- read.csv(here::here('psychometrics.csv'))
setwd("~/Documents/RUG/Thesis/EMA-mindfulness/Data/ESM/mindcog_v202202-2")
setwd("/Users/clemenskaiser/Documents/RUG/Thesis/EMA-mindfulness/Literature/ESM/AILD-Tilburg-2021(shared)")
### Load the psychometrics dataset
psychometrics <- read.csv(here::here('psychometrics.csv'))
getwd()
setwd("/Users/clemenskaiser/Documents/RUG/Thesis/EMA-mindfulness/Literature/ESM/AILD-Tilburg-2021(shared)/R Syntax")
setwd("/Users/clemenskaiser/Documents/RUG/Thesis/EMA-mindfulness/Literature/ESM/AILD-Tilburg-2021(shared)/R Syntax")
### Load the psychometrics dataset
psychometrics <- read.csv(here::here('psychometrics.csv'))
setwd("/Users/clemenskaiser/Documents/RUG/Thesis/EMA-mindfulness/Literature/ESM/AILD-Tilburg-2021(shared)/R Syntax")
getwd()
### Load the psychometrics dataset
psychometrics <- read.csv(here('psychometrics.csv'))
### Load the psychometrics dataset
psychometrics <- read.csv('psychometrics.csv')
help(here)
head(psychometrics, 10)
### Create versions of person, time and item that R treats as factors
psychometrics$catitem <- as.factor(psychometrics$item)
psychometrics$catperson <- as.factor(psychometrics$person)
psychometrics$cattime <- as.factor(psychometrics$time)
### Estimate a model with crossed random effects of person, time, item and their interactions
mod1<-lmer(y ~  1 + (1|catperson) + (1|cattime) + (1|catitem)
+ (1|catperson:cattime) + (1|catperson:catitem) + (1|cattime:catitem), data=psychometrics)
summary(mod1)
VarCorr(mod1)[[1]][1,1] #catperson:cattime
VarCorr(mod1)[[2]][1,1] #catperson:catitem
VarCorr(mod1)[[3]][1,1] #catperson
VarCorr(mod1)[[4]][1,1] #cattime:catitem
VarCorr(mod1)[[5]][1,1] #cattime
VarCorr(mod1)[[6]][1,1] #catitem
sigma(mod1)^2            #Residual
### Calculate the total variance from the components
Totvar<-VarCorr(mod1)[[1]][1,1] +
VarCorr(mod1)[[2]][1,1] +
VarCorr(mod1)[[3]][1,1] +
VarCorr(mod1)[[4]][1,1] +
VarCorr(mod1)[[5]][1,1] +
VarCorr(mod1)[[6]][1,1] +
sigma(mod1)^2            #Residual
Totvar
var(psychometrics$y, na.rm=T) #Variance of original y
### Use specific components to calculate Rc, the reliability of change
Rc<-(VarCorr(mod1)[[1]][1,1])/((VarCorr(mod1)[[1]][1,1]) + (sigma(mod1)^2)/4)
Rc
### Run using brms
brmod1<-brm(y ~  1 + (1|catperson) + (1|cattime) + (1|catitem)
+ (1|catperson:cattime) + (1|catperson:catitem) + (1|cattime:catitem),
seed=1, cores=4, chains=2, data=psychometrics)
library(brms)
### Load the packages we will need
library(here)
### Load the psychometrics dataset
psychometrics <- read.csv(here('psychometrics.csv'))
### Run using brms
brmod1<-brm(y ~  1 + (1|catperson) + (1|cattime) + (1|catitem)
+ (1|catperson:cattime) + (1|catperson:catitem) + (1|cattime:catitem),
seed=1, cores=4, chains=2, data=psychometrics)
print(summary(brmod1), digits = 6)
### Take a look at the posterior distributions
plot(brmod1)
brmtotvar <-
0.393386^2 +   #catitem
0.615676^2 +   #catperson
0.439904^2 +   #catperson:catitem
0.504661^2 +   #catperson:cattime
0.049373^2 +   #cattime
0.069099^2 +   #cattime:catitem
0.549069^2     #sigma
brmtotvar
### Bayesian Version: Use specific components to calculate bRc, the reliability of change
bRc<-(0.504661^2)/(0.504661^2  + (0.549069^2)/4)
bRc
Rc
